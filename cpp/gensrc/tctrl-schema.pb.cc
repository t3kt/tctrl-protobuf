// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tctrl-schema.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "tctrl-schema.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tctrl {
namespace schema {
class ParamOptionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ParamOption> {
} _ParamOption_default_instance_;
class OptionListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OptionList> {
} _OptionList_default_instance_;
class ParamPartSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ParamPartSpec> {
} _ParamPartSpec_default_instance_;
class ParamSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ParamSpec> {
} _ParamSpec_default_instance_;
class ModuleTypeSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModuleTypeSpec> {
} _ModuleTypeSpec_default_instance_;
class ModuleSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModuleSpec> {
} _ModuleSpec_default_instance_;
class ConnectionInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConnectionInfo> {
} _ConnectionInfo_default_instance_;
class GroupInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GroupInfo> {
} _GroupInfo_default_instance_;
class AppSpecDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AppSpec> {
} _AppSpec_default_instance_;

namespace protobuf_tctrl_2dschema_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamOption, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamOption, label_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionList, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionList, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OptionList, option_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, minlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, maxlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, minnorm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, maxnorm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, defaultval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamPartSpec, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, othertype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, minlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, maxlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, minnorm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, maxnorm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, defaultval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, valueindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, style_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, option_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, optionlistkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, help_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, offhelp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, buttontext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, buttonofftext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamSpec, properties_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleTypeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleTypeSpec, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleTypeSpec, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleTypeSpec, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleTypeSpec, paramgroup_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, moduletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, childmodule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, paramgroup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModuleSpec, childgroup_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionInfo, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionInfo, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionInfo, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectionInfo, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupInfo, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, childmodule_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, childgroup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, optionlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSpec, moduletype_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ParamOption)},
  { 7, -1, sizeof(OptionList)},
  { 15, -1, sizeof(ParamPartSpec)},
  { 29, -1, sizeof(ParamSpec)},
  { 57, -1, sizeof(ModuleTypeSpec)},
  { 66, -1, sizeof(ModuleSpec)},
  { 81, -1, sizeof(ConnectionInfo)},
  { 91, -1, sizeof(GroupInfo)},
  { 99, -1, sizeof(AppSpec)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParamOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OptionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParamPartSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParamSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModuleTypeSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModuleSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnectionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppSpec_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tctrl-schema.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _ParamOption_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _OptionList_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ParamPartSpec_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ParamSpec_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ModuleTypeSpec_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ModuleSpec_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ConnectionInfo_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _GroupInfo_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _AppSpec_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::InitDefaults();
  _ParamOption_default_instance_.DefaultConstruct();
  _OptionList_default_instance_.DefaultConstruct();
  _ParamPartSpec_default_instance_.DefaultConstruct();
  _ParamSpec_default_instance_.DefaultConstruct();
  _ModuleTypeSpec_default_instance_.DefaultConstruct();
  _ModuleSpec_default_instance_.DefaultConstruct();
  _ConnectionInfo_default_instance_.DefaultConstruct();
  _GroupInfo_default_instance_.DefaultConstruct();
  _AppSpec_default_instance_.DefaultConstruct();
  _ParamPartSpec_default_instance_.get_mutable()->minlimit_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamPartSpec_default_instance_.get_mutable()->maxlimit_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamPartSpec_default_instance_.get_mutable()->minnorm_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamPartSpec_default_instance_.get_mutable()->maxnorm_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamPartSpec_default_instance_.get_mutable()->defaultval_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamPartSpec_default_instance_.get_mutable()->value_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamSpec_default_instance_.get_mutable()->minlimit_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamSpec_default_instance_.get_mutable()->maxlimit_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamSpec_default_instance_.get_mutable()->minnorm_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamSpec_default_instance_.get_mutable()->maxnorm_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamSpec_default_instance_.get_mutable()->defaultval_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamSpec_default_instance_.get_mutable()->value_ = const_cast< ::google::protobuf::Value*>(
      ::google::protobuf::Value::internal_default_instance());
  _ParamSpec_default_instance_.get_mutable()->valueindex_ = const_cast< ::google::protobuf::Int32Value*>(
      ::google::protobuf::Int32Value::internal_default_instance());
  _ParamSpec_default_instance_.get_mutable()->properties_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022tctrl-schema.proto\022\014tctrl.schema\032\034goog"
      "le/protobuf/struct.proto\032\036google/protobu"
      "f/wrappers.proto\")\n\013ParamOption\022\013\n\003key\030\001"
      " \001(\t\022\r\n\005label\030\002 \001(\t\"S\n\nOptionList\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022)\n\006option\030\003 \003(\0132\031."
      "tctrl.schema.ParamOption\"\262\002\n\rParamPartSp"
      "ec\022\013\n\003key\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\014\n\004path\030\t"
      " \001(\t\022(\n\010minLimit\030\003 \001(\0132\026.google.protobuf"
      ".Value\022(\n\010maxLimit\030\004 \001(\0132\026.google.protob"
      "uf.Value\022\'\n\007minNorm\030\005 \001(\0132\026.google.proto"
      "buf.Value\022\'\n\007maxNorm\030\006 \001(\0132\026.google.prot"
      "obuf.Value\022*\n\ndefaultVal\030\007 \001(\0132\026.google."
      "protobuf.Value\022%\n\005value\030\010 \001(\0132\026.google.p"
      "rotobuf.Value\"\251\005\n\tParamSpec\022\013\n\003key\030\001 \001(\t"
      "\022\r\n\005label\030\002 \001(\t\022%\n\004type\030\003 \001(\0162\027.tctrl.sc"
      "hema.ParamType\022\014\n\004path\030\004 \001(\t\022\021\n\totherTyp"
      "e\030\005 \001(\t\022(\n\010minLimit\030\006 \001(\0132\026.google.proto"
      "buf.Value\022(\n\010maxLimit\030\007 \001(\0132\026.google.pro"
      "tobuf.Value\022\'\n\007minNorm\030\010 \001(\0132\026.google.pr"
      "otobuf.Value\022\'\n\007maxNorm\030\t \001(\0132\026.google.p"
      "rotobuf.Value\022*\n\ndefaultVal\030\n \001(\0132\026.goog"
      "le.protobuf.Value\022%\n\005value\030\013 \001(\0132\026.googl"
      "e.protobuf.Value\022/\n\nvalueIndex\030\014 \001(\0132\033.g"
      "oogle.protobuf.Int32Value\022)\n\004part\030\r \003(\0132"
      "\033.tctrl.schema.ParamPartSpec\022\r\n\005style\030\016 "
      "\001(\t\022\r\n\005group\030\017 \001(\t\022)\n\006option\030\020 \003(\0132\031.tct"
      "rl.schema.ParamOption\022\025\n\roptionListKey\030\021"
      " \001(\t\022\013\n\003tag\030\022 \003(\t\022\014\n\004help\030\023 \001(\t\022\017\n\007offHe"
      "lp\030\024 \001(\t\022\022\n\nbuttonText\030\025 \001(\t\022\025\n\rbuttonOf"
      "fText\030\026 \001(\t\022,\n\nproperties\030\350\007 \001(\0132\027.googl"
      "e.protobuf.Struct\"\201\001\n\016ModuleTypeSpec\022\013\n\003"
      "key\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022&\n\005param\030\007 \003(\0132"
      "\027.tctrl.schema.ParamSpec\022+\n\nparamGroup\030\t"
      " \003(\0132\027.tctrl.schema.GroupInfo\"\227\002\n\nModule"
      "Spec\022\013\n\003key\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\014\n\004path"
      "\030\003 \001(\t\022\022\n\nmoduleType\030\004 \001(\t\022\r\n\005group\030\005 \001("
      "\t\022\013\n\003tag\030\006 \003(\t\022&\n\005param\030\007 \003(\0132\027.tctrl.sc"
      "hema.ParamSpec\022-\n\013childModule\030\010 \003(\0132\030.tc"
      "trl.schema.ModuleSpec\022+\n\nparamGroup\030\t \003("
      "\0132\027.tctrl.schema.GroupInfo\022+\n\nchildGroup"
      "\030\n \003(\0132\027.tctrl.schema.GroupInfo\"V\n\016Conne"
      "ctionInfo\022\013\n\003key\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\014\n"
      "\004type\030\003 \001(\t\022\014\n\004host\030\004 \001(\t\022\014\n\004port\030\005 \001(\005\""
      "4\n\tGroupInfo\022\013\n\003key\030\001 \001(\t\022\r\n\005label\030\002 \001(\t"
      "\022\013\n\003tag\030\003 \003(\t\"\303\002\n\007AppSpec\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005label\030\002 \001(\t\022\013\n\003tag\030\003 \003(\t\022\023\n\013descriptio"
      "n\030\004 \001(\t\022\014\n\004path\030\n \001(\t\022-\n\013childModule\030\005 \003"
      "(\0132\030.tctrl.schema.ModuleSpec\022+\n\nchildGro"
      "up\030\006 \003(\0132\027.tctrl.schema.GroupInfo\022,\n\nopt"
      "ionList\030\007 \003(\0132\030.tctrl.schema.OptionList\022"
      "0\n\nconnection\030\010 \003(\0132\034.tctrl.schema.Conne"
      "ctionInfo\0220\n\nmoduleType\030\t \003(\0132\034.tctrl.sc"
      "hema.ModuleTypeSpec*k\n\tParamType\022\t\n\005OTHE"
      "R\020\000\022\010\n\004BOOL\020\003\022\n\n\006STRING\020\004\022\007\n\003INT\020\005\022\t\n\005FL"
      "OAT\020\006\022\010\n\004IVEC\020\007\022\010\n\004FVEC\020\010\022\010\n\004MENU\020\n\022\013\n\007T"
      "RIGGER\020\013B)\n\025net.t3kt.tctrl.schemaB\020Tctrl"
      "SchemaProtob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2259);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tctrl-schema.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_tctrl_2dschema_2eproto

const ::google::protobuf::EnumDescriptor* ParamType_descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_enum_descriptors[0];
}
bool ParamType_IsValid(int value) {
  switch (value) {
    case 0:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamOption::kKeyFieldNumber;
const int ParamOption::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamOption::ParamOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.ParamOption)
}
ParamOption::ParamOption(const ParamOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.ParamOption)
}

void ParamOption::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ParamOption::~ParamOption() {
  // @@protoc_insertion_point(destructor:tctrl.schema.ParamOption)
  SharedDtor();
}

void ParamOption::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParamOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParamOption::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamOption& ParamOption::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParamOption* ParamOption::New(::google::protobuf::Arena* arena) const {
  ParamOption* n = new ParamOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParamOption::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.ParamOption)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ParamOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.ParamOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamOption.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamOption.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.ParamOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.ParamOption)
  return false;
#undef DO_
}

void ParamOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.ParamOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamOption.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamOption.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.ParamOption)
}

::google::protobuf::uint8* ParamOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.ParamOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamOption.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamOption.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.ParamOption)
  return target;
}

size_t ParamOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.ParamOption)
  size_t total_size = 0;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParamOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.ParamOption)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.ParamOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.ParamOption)
    MergeFrom(*source);
  }
}

void ParamOption::MergeFrom(const ParamOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.ParamOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
}

void ParamOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.ParamOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamOption::CopyFrom(const ParamOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.ParamOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamOption::IsInitialized() const {
  return true;
}

void ParamOption::Swap(ParamOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamOption::InternalSwap(ParamOption* other) {
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParamOption::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParamOption

// string key = 1;
void ParamOption::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamOption::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamOption.key)
  return key_.GetNoArena();
}
void ParamOption::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamOption.key)
}
#if LANG_CXX11
void ParamOption::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamOption.key)
}
#endif
void ParamOption::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamOption.key)
}
void ParamOption::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamOption.key)
}
::std::string* ParamOption::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamOption.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamOption::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamOption.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamOption::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamOption.key)
}

// string label = 2;
void ParamOption::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamOption::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamOption.label)
  return label_.GetNoArena();
}
void ParamOption::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamOption.label)
}
#if LANG_CXX11
void ParamOption::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamOption.label)
}
#endif
void ParamOption::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamOption.label)
}
void ParamOption::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamOption.label)
}
::std::string* ParamOption::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamOption.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamOption::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamOption.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamOption::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamOption.label)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionList::kKeyFieldNumber;
const int OptionList::kLabelFieldNumber;
const int OptionList::kOptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionList::OptionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.OptionList)
}
OptionList::OptionList(const OptionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      option_(from.option_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.OptionList)
}

void OptionList::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OptionList::~OptionList() {
  // @@protoc_insertion_point(destructor:tctrl.schema.OptionList)
  SharedDtor();
}

void OptionList::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OptionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptionList::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionList& OptionList::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

OptionList* OptionList::New(::google::protobuf::Arena* arena) const {
  OptionList* n = new OptionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptionList::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.OptionList)
  option_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OptionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.OptionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.OptionList.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.OptionList.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ParamOption option = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_option()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.OptionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.OptionList)
  return false;
#undef DO_
}

void OptionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.OptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.OptionList.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.OptionList.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // repeated .tctrl.schema.ParamOption option = 3;
  for (unsigned int i = 0, n = this->option_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->option(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.OptionList)
}

::google::protobuf::uint8* OptionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.OptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.OptionList.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.OptionList.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // repeated .tctrl.schema.ParamOption option = 3;
  for (unsigned int i = 0, n = this->option_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->option(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.OptionList)
  return target;
}

size_t OptionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.OptionList)
  size_t total_size = 0;

  // repeated .tctrl.schema.ParamOption option = 3;
  {
    unsigned int count = this->option_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->option(i));
    }
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.OptionList)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.OptionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.OptionList)
    MergeFrom(*source);
  }
}

void OptionList::MergeFrom(const OptionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.OptionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  option_.MergeFrom(from.option_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
}

void OptionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.OptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionList::CopyFrom(const OptionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.OptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionList::IsInitialized() const {
  return true;
}

void OptionList::Swap(OptionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionList::InternalSwap(OptionList* other) {
  option_.InternalSwap(&other->option_);
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptionList::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OptionList

// string key = 1;
void OptionList::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OptionList::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.OptionList.key)
  return key_.GetNoArena();
}
void OptionList::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.OptionList.key)
}
#if LANG_CXX11
void OptionList::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.OptionList.key)
}
#endif
void OptionList::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.OptionList.key)
}
void OptionList::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.OptionList.key)
}
::std::string* OptionList::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.OptionList.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OptionList::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.OptionList.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OptionList::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.OptionList.key)
}

// string label = 2;
void OptionList::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OptionList::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.OptionList.label)
  return label_.GetNoArena();
}
void OptionList::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.OptionList.label)
}
#if LANG_CXX11
void OptionList::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.OptionList.label)
}
#endif
void OptionList::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.OptionList.label)
}
void OptionList::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.OptionList.label)
}
::std::string* OptionList::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.OptionList.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OptionList::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.OptionList.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OptionList::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.OptionList.label)
}

// repeated .tctrl.schema.ParamOption option = 3;
int OptionList::option_size() const {
  return option_.size();
}
void OptionList::clear_option() {
  option_.Clear();
}
const ::tctrl::schema::ParamOption& OptionList::option(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.OptionList.option)
  return option_.Get(index);
}
::tctrl::schema::ParamOption* OptionList::mutable_option(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.OptionList.option)
  return option_.Mutable(index);
}
::tctrl::schema::ParamOption* OptionList::add_option() {
  // @@protoc_insertion_point(field_add:tctrl.schema.OptionList.option)
  return option_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamOption >*
OptionList::mutable_option() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.OptionList.option)
  return &option_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamOption >&
OptionList::option() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.OptionList.option)
  return option_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamPartSpec::kKeyFieldNumber;
const int ParamPartSpec::kLabelFieldNumber;
const int ParamPartSpec::kPathFieldNumber;
const int ParamPartSpec::kMinLimitFieldNumber;
const int ParamPartSpec::kMaxLimitFieldNumber;
const int ParamPartSpec::kMinNormFieldNumber;
const int ParamPartSpec::kMaxNormFieldNumber;
const int ParamPartSpec::kDefaultValFieldNumber;
const int ParamPartSpec::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamPartSpec::ParamPartSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.ParamPartSpec)
}
ParamPartSpec::ParamPartSpec(const ParamPartSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_minlimit()) {
    minlimit_ = new ::google::protobuf::Value(*from.minlimit_);
  } else {
    minlimit_ = NULL;
  }
  if (from.has_maxlimit()) {
    maxlimit_ = new ::google::protobuf::Value(*from.maxlimit_);
  } else {
    maxlimit_ = NULL;
  }
  if (from.has_minnorm()) {
    minnorm_ = new ::google::protobuf::Value(*from.minnorm_);
  } else {
    minnorm_ = NULL;
  }
  if (from.has_maxnorm()) {
    maxnorm_ = new ::google::protobuf::Value(*from.maxnorm_);
  } else {
    maxnorm_ = NULL;
  }
  if (from.has_defaultval()) {
    defaultval_ = new ::google::protobuf::Value(*from.defaultval_);
  } else {
    defaultval_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::protobuf::Value(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.ParamPartSpec)
}

void ParamPartSpec::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&minlimit_, 0, reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&minlimit_) + sizeof(value_));
  _cached_size_ = 0;
}

ParamPartSpec::~ParamPartSpec() {
  // @@protoc_insertion_point(destructor:tctrl.schema.ParamPartSpec)
  SharedDtor();
}

void ParamPartSpec::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete minlimit_;
  }
  if (this != internal_default_instance()) {
    delete maxlimit_;
  }
  if (this != internal_default_instance()) {
    delete minnorm_;
  }
  if (this != internal_default_instance()) {
    delete maxnorm_;
  }
  if (this != internal_default_instance()) {
    delete defaultval_;
  }
  if (this != internal_default_instance()) {
    delete value_;
  }
}

void ParamPartSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParamPartSpec::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamPartSpec& ParamPartSpec::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParamPartSpec* ParamPartSpec::New(::google::protobuf::Arena* arena) const {
  ParamPartSpec* n = new ParamPartSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParamPartSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.ParamPartSpec)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && minlimit_ != NULL) {
    delete minlimit_;
  }
  minlimit_ = NULL;
  if (GetArenaNoVirtual() == NULL && maxlimit_ != NULL) {
    delete maxlimit_;
  }
  maxlimit_ = NULL;
  if (GetArenaNoVirtual() == NULL && minnorm_ != NULL) {
    delete minnorm_;
  }
  minnorm_ = NULL;
  if (GetArenaNoVirtual() == NULL && maxnorm_ != NULL) {
    delete maxnorm_;
  }
  maxnorm_ = NULL;
  if (GetArenaNoVirtual() == NULL && defaultval_ != NULL) {
    delete defaultval_;
  }
  defaultval_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}

bool ParamPartSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.ParamPartSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamPartSpec.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamPartSpec.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value minLimit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_minlimit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value maxLimit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maxlimit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value minNorm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_minnorm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value maxNorm = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maxnorm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value defaultVal = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamPartSpec.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.ParamPartSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.ParamPartSpec)
  return false;
#undef DO_
}

void ParamPartSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.ParamPartSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamPartSpec.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamPartSpec.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // .google.protobuf.Value minLimit = 3;
  if (this->has_minlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->minlimit_, output);
  }

  // .google.protobuf.Value maxLimit = 4;
  if (this->has_maxlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->maxlimit_, output);
  }

  // .google.protobuf.Value minNorm = 5;
  if (this->has_minnorm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->minnorm_, output);
  }

  // .google.protobuf.Value maxNorm = 6;
  if (this->has_maxnorm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->maxnorm_, output);
  }

  // .google.protobuf.Value defaultVal = 7;
  if (this->has_defaultval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->defaultval_, output);
  }

  // .google.protobuf.Value value = 8;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->value_, output);
  }

  // string path = 9;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamPartSpec.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.ParamPartSpec)
}

::google::protobuf::uint8* ParamPartSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.ParamPartSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamPartSpec.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamPartSpec.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // .google.protobuf.Value minLimit = 3;
  if (this->has_minlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->minlimit_, deterministic, target);
  }

  // .google.protobuf.Value maxLimit = 4;
  if (this->has_maxlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->maxlimit_, deterministic, target);
  }

  // .google.protobuf.Value minNorm = 5;
  if (this->has_minnorm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->minnorm_, deterministic, target);
  }

  // .google.protobuf.Value maxNorm = 6;
  if (this->has_maxnorm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->maxnorm_, deterministic, target);
  }

  // .google.protobuf.Value defaultVal = 7;
  if (this->has_defaultval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->defaultval_, deterministic, target);
  }

  // .google.protobuf.Value value = 8;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->value_, deterministic, target);
  }

  // string path = 9;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamPartSpec.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.ParamPartSpec)
  return target;
}

size_t ParamPartSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.ParamPartSpec)
  size_t total_size = 0;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string path = 9;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // .google.protobuf.Value minLimit = 3;
  if (this->has_minlimit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->minlimit_);
  }

  // .google.protobuf.Value maxLimit = 4;
  if (this->has_maxlimit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->maxlimit_);
  }

  // .google.protobuf.Value minNorm = 5;
  if (this->has_minnorm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->minnorm_);
  }

  // .google.protobuf.Value maxNorm = 6;
  if (this->has_maxnorm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->maxnorm_);
  }

  // .google.protobuf.Value defaultVal = 7;
  if (this->has_defaultval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->defaultval_);
  }

  // .google.protobuf.Value value = 8;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParamPartSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.ParamPartSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamPartSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamPartSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.ParamPartSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.ParamPartSpec)
    MergeFrom(*source);
  }
}

void ParamPartSpec::MergeFrom(const ParamPartSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.ParamPartSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.has_minlimit()) {
    mutable_minlimit()->::google::protobuf::Value::MergeFrom(from.minlimit());
  }
  if (from.has_maxlimit()) {
    mutable_maxlimit()->::google::protobuf::Value::MergeFrom(from.maxlimit());
  }
  if (from.has_minnorm()) {
    mutable_minnorm()->::google::protobuf::Value::MergeFrom(from.minnorm());
  }
  if (from.has_maxnorm()) {
    mutable_maxnorm()->::google::protobuf::Value::MergeFrom(from.maxnorm());
  }
  if (from.has_defaultval()) {
    mutable_defaultval()->::google::protobuf::Value::MergeFrom(from.defaultval());
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Value::MergeFrom(from.value());
  }
}

void ParamPartSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.ParamPartSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamPartSpec::CopyFrom(const ParamPartSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.ParamPartSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamPartSpec::IsInitialized() const {
  return true;
}

void ParamPartSpec::Swap(ParamPartSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamPartSpec::InternalSwap(ParamPartSpec* other) {
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  path_.Swap(&other->path_);
  std::swap(minlimit_, other->minlimit_);
  std::swap(maxlimit_, other->maxlimit_);
  std::swap(minnorm_, other->minnorm_);
  std::swap(maxnorm_, other->maxnorm_);
  std::swap(defaultval_, other->defaultval_);
  std::swap(value_, other->value_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParamPartSpec::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParamPartSpec

// string key = 1;
void ParamPartSpec::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamPartSpec::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.key)
  return key_.GetNoArena();
}
void ParamPartSpec::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamPartSpec.key)
}
#if LANG_CXX11
void ParamPartSpec::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamPartSpec.key)
}
#endif
void ParamPartSpec::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamPartSpec.key)
}
void ParamPartSpec::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamPartSpec.key)
}
::std::string* ParamPartSpec::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamPartSpec::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamPartSpec::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.key)
}

// string label = 2;
void ParamPartSpec::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamPartSpec::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.label)
  return label_.GetNoArena();
}
void ParamPartSpec::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamPartSpec.label)
}
#if LANG_CXX11
void ParamPartSpec::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamPartSpec.label)
}
#endif
void ParamPartSpec::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamPartSpec.label)
}
void ParamPartSpec::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamPartSpec.label)
}
::std::string* ParamPartSpec::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamPartSpec::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamPartSpec::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.label)
}

// string path = 9;
void ParamPartSpec::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamPartSpec::path() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.path)
  return path_.GetNoArena();
}
void ParamPartSpec::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamPartSpec.path)
}
#if LANG_CXX11
void ParamPartSpec::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamPartSpec.path)
}
#endif
void ParamPartSpec::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamPartSpec.path)
}
void ParamPartSpec::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamPartSpec.path)
}
::std::string* ParamPartSpec::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamPartSpec::release_path() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamPartSpec::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.path)
}

// .google.protobuf.Value minLimit = 3;
bool ParamPartSpec::has_minlimit() const {
  return this != internal_default_instance() && minlimit_ != NULL;
}
void ParamPartSpec::clear_minlimit() {
  if (GetArenaNoVirtual() == NULL && minlimit_ != NULL) delete minlimit_;
  minlimit_ = NULL;
}
const ::google::protobuf::Value& ParamPartSpec::minlimit() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.minLimit)
  return minlimit_ != NULL ? *minlimit_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamPartSpec::mutable_minlimit() {
  
  if (minlimit_ == NULL) {
    minlimit_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.minLimit)
  return minlimit_;
}
::google::protobuf::Value* ParamPartSpec::release_minlimit() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.minLimit)
  
  ::google::protobuf::Value* temp = minlimit_;
  minlimit_ = NULL;
  return temp;
}
void ParamPartSpec::set_allocated_minlimit(::google::protobuf::Value* minlimit) {
  delete minlimit_;
  if (minlimit != NULL && minlimit->GetArena() != NULL) {
    ::google::protobuf::Value* new_minlimit = new ::google::protobuf::Value;
    new_minlimit->CopyFrom(*minlimit);
    minlimit = new_minlimit;
  }
  minlimit_ = minlimit;
  if (minlimit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.minLimit)
}

// .google.protobuf.Value maxLimit = 4;
bool ParamPartSpec::has_maxlimit() const {
  return this != internal_default_instance() && maxlimit_ != NULL;
}
void ParamPartSpec::clear_maxlimit() {
  if (GetArenaNoVirtual() == NULL && maxlimit_ != NULL) delete maxlimit_;
  maxlimit_ = NULL;
}
const ::google::protobuf::Value& ParamPartSpec::maxlimit() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.maxLimit)
  return maxlimit_ != NULL ? *maxlimit_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamPartSpec::mutable_maxlimit() {
  
  if (maxlimit_ == NULL) {
    maxlimit_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.maxLimit)
  return maxlimit_;
}
::google::protobuf::Value* ParamPartSpec::release_maxlimit() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.maxLimit)
  
  ::google::protobuf::Value* temp = maxlimit_;
  maxlimit_ = NULL;
  return temp;
}
void ParamPartSpec::set_allocated_maxlimit(::google::protobuf::Value* maxlimit) {
  delete maxlimit_;
  if (maxlimit != NULL && maxlimit->GetArena() != NULL) {
    ::google::protobuf::Value* new_maxlimit = new ::google::protobuf::Value;
    new_maxlimit->CopyFrom(*maxlimit);
    maxlimit = new_maxlimit;
  }
  maxlimit_ = maxlimit;
  if (maxlimit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.maxLimit)
}

// .google.protobuf.Value minNorm = 5;
bool ParamPartSpec::has_minnorm() const {
  return this != internal_default_instance() && minnorm_ != NULL;
}
void ParamPartSpec::clear_minnorm() {
  if (GetArenaNoVirtual() == NULL && minnorm_ != NULL) delete minnorm_;
  minnorm_ = NULL;
}
const ::google::protobuf::Value& ParamPartSpec::minnorm() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.minNorm)
  return minnorm_ != NULL ? *minnorm_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamPartSpec::mutable_minnorm() {
  
  if (minnorm_ == NULL) {
    minnorm_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.minNorm)
  return minnorm_;
}
::google::protobuf::Value* ParamPartSpec::release_minnorm() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.minNorm)
  
  ::google::protobuf::Value* temp = minnorm_;
  minnorm_ = NULL;
  return temp;
}
void ParamPartSpec::set_allocated_minnorm(::google::protobuf::Value* minnorm) {
  delete minnorm_;
  if (minnorm != NULL && minnorm->GetArena() != NULL) {
    ::google::protobuf::Value* new_minnorm = new ::google::protobuf::Value;
    new_minnorm->CopyFrom(*minnorm);
    minnorm = new_minnorm;
  }
  minnorm_ = minnorm;
  if (minnorm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.minNorm)
}

// .google.protobuf.Value maxNorm = 6;
bool ParamPartSpec::has_maxnorm() const {
  return this != internal_default_instance() && maxnorm_ != NULL;
}
void ParamPartSpec::clear_maxnorm() {
  if (GetArenaNoVirtual() == NULL && maxnorm_ != NULL) delete maxnorm_;
  maxnorm_ = NULL;
}
const ::google::protobuf::Value& ParamPartSpec::maxnorm() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.maxNorm)
  return maxnorm_ != NULL ? *maxnorm_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamPartSpec::mutable_maxnorm() {
  
  if (maxnorm_ == NULL) {
    maxnorm_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.maxNorm)
  return maxnorm_;
}
::google::protobuf::Value* ParamPartSpec::release_maxnorm() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.maxNorm)
  
  ::google::protobuf::Value* temp = maxnorm_;
  maxnorm_ = NULL;
  return temp;
}
void ParamPartSpec::set_allocated_maxnorm(::google::protobuf::Value* maxnorm) {
  delete maxnorm_;
  if (maxnorm != NULL && maxnorm->GetArena() != NULL) {
    ::google::protobuf::Value* new_maxnorm = new ::google::protobuf::Value;
    new_maxnorm->CopyFrom(*maxnorm);
    maxnorm = new_maxnorm;
  }
  maxnorm_ = maxnorm;
  if (maxnorm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.maxNorm)
}

// .google.protobuf.Value defaultVal = 7;
bool ParamPartSpec::has_defaultval() const {
  return this != internal_default_instance() && defaultval_ != NULL;
}
void ParamPartSpec::clear_defaultval() {
  if (GetArenaNoVirtual() == NULL && defaultval_ != NULL) delete defaultval_;
  defaultval_ = NULL;
}
const ::google::protobuf::Value& ParamPartSpec::defaultval() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.defaultVal)
  return defaultval_ != NULL ? *defaultval_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamPartSpec::mutable_defaultval() {
  
  if (defaultval_ == NULL) {
    defaultval_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.defaultVal)
  return defaultval_;
}
::google::protobuf::Value* ParamPartSpec::release_defaultval() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.defaultVal)
  
  ::google::protobuf::Value* temp = defaultval_;
  defaultval_ = NULL;
  return temp;
}
void ParamPartSpec::set_allocated_defaultval(::google::protobuf::Value* defaultval) {
  delete defaultval_;
  if (defaultval != NULL && defaultval->GetArena() != NULL) {
    ::google::protobuf::Value* new_defaultval = new ::google::protobuf::Value;
    new_defaultval->CopyFrom(*defaultval);
    defaultval = new_defaultval;
  }
  defaultval_ = defaultval;
  if (defaultval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.defaultVal)
}

// .google.protobuf.Value value = 8;
bool ParamPartSpec::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
void ParamPartSpec::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::google::protobuf::Value& ParamPartSpec::value() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamPartSpec.value)
  return value_ != NULL ? *value_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamPartSpec::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamPartSpec.value)
  return value_;
}
::google::protobuf::Value* ParamPartSpec::release_value() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamPartSpec.value)
  
  ::google::protobuf::Value* temp = value_;
  value_ = NULL;
  return temp;
}
void ParamPartSpec::set_allocated_value(::google::protobuf::Value* value) {
  delete value_;
  if (value != NULL && value->GetArena() != NULL) {
    ::google::protobuf::Value* new_value = new ::google::protobuf::Value;
    new_value->CopyFrom(*value);
    value = new_value;
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamPartSpec.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamSpec::kKeyFieldNumber;
const int ParamSpec::kLabelFieldNumber;
const int ParamSpec::kTypeFieldNumber;
const int ParamSpec::kPathFieldNumber;
const int ParamSpec::kOtherTypeFieldNumber;
const int ParamSpec::kMinLimitFieldNumber;
const int ParamSpec::kMaxLimitFieldNumber;
const int ParamSpec::kMinNormFieldNumber;
const int ParamSpec::kMaxNormFieldNumber;
const int ParamSpec::kDefaultValFieldNumber;
const int ParamSpec::kValueFieldNumber;
const int ParamSpec::kValueIndexFieldNumber;
const int ParamSpec::kPartFieldNumber;
const int ParamSpec::kStyleFieldNumber;
const int ParamSpec::kGroupFieldNumber;
const int ParamSpec::kOptionFieldNumber;
const int ParamSpec::kOptionListKeyFieldNumber;
const int ParamSpec::kTagFieldNumber;
const int ParamSpec::kHelpFieldNumber;
const int ParamSpec::kOffHelpFieldNumber;
const int ParamSpec::kButtonTextFieldNumber;
const int ParamSpec::kButtonOffTextFieldNumber;
const int ParamSpec::kPropertiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamSpec::ParamSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.ParamSpec)
}
ParamSpec::ParamSpec(const ParamSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      part_(from.part_),
      option_(from.option_),
      tag_(from.tag_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  othertype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.othertype().size() > 0) {
    othertype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othertype_);
  }
  style_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.style().size() > 0) {
    style_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.style_);
  }
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group().size() > 0) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  optionlistkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.optionlistkey().size() > 0) {
    optionlistkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionlistkey_);
  }
  help_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.help().size() > 0) {
    help_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.help_);
  }
  offhelp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.offhelp().size() > 0) {
    offhelp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offhelp_);
  }
  buttontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buttontext().size() > 0) {
    buttontext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buttontext_);
  }
  buttonofftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buttonofftext().size() > 0) {
    buttonofftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buttonofftext_);
  }
  if (from.has_minlimit()) {
    minlimit_ = new ::google::protobuf::Value(*from.minlimit_);
  } else {
    minlimit_ = NULL;
  }
  if (from.has_maxlimit()) {
    maxlimit_ = new ::google::protobuf::Value(*from.maxlimit_);
  } else {
    maxlimit_ = NULL;
  }
  if (from.has_minnorm()) {
    minnorm_ = new ::google::protobuf::Value(*from.minnorm_);
  } else {
    minnorm_ = NULL;
  }
  if (from.has_maxnorm()) {
    maxnorm_ = new ::google::protobuf::Value(*from.maxnorm_);
  } else {
    maxnorm_ = NULL;
  }
  if (from.has_defaultval()) {
    defaultval_ = new ::google::protobuf::Value(*from.defaultval_);
  } else {
    defaultval_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::protobuf::Value(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_valueindex()) {
    valueindex_ = new ::google::protobuf::Int32Value(*from.valueindex_);
  } else {
    valueindex_ = NULL;
  }
  if (from.has_properties()) {
    properties_ = new ::google::protobuf::Struct(*from.properties_);
  } else {
    properties_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.ParamSpec)
}

void ParamSpec::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othertype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionlistkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offhelp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buttontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buttonofftext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&minlimit_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&minlimit_) + sizeof(type_));
  _cached_size_ = 0;
}

ParamSpec::~ParamSpec() {
  // @@protoc_insertion_point(destructor:tctrl.schema.ParamSpec)
  SharedDtor();
}

void ParamSpec::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othertype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionlistkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offhelp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buttontext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buttonofftext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete minlimit_;
  }
  if (this != internal_default_instance()) {
    delete maxlimit_;
  }
  if (this != internal_default_instance()) {
    delete minnorm_;
  }
  if (this != internal_default_instance()) {
    delete maxnorm_;
  }
  if (this != internal_default_instance()) {
    delete defaultval_;
  }
  if (this != internal_default_instance()) {
    delete value_;
  }
  if (this != internal_default_instance()) {
    delete valueindex_;
  }
  if (this != internal_default_instance()) {
    delete properties_;
  }
}

void ParamSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParamSpec::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamSpec& ParamSpec::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParamSpec* ParamSpec::New(::google::protobuf::Arena* arena) const {
  ParamSpec* n = new ParamSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParamSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.ParamSpec)
  part_.Clear();
  option_.Clear();
  tag_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  othertype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  optionlistkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  help_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offhelp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buttontext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buttonofftext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && minlimit_ != NULL) {
    delete minlimit_;
  }
  minlimit_ = NULL;
  if (GetArenaNoVirtual() == NULL && maxlimit_ != NULL) {
    delete maxlimit_;
  }
  maxlimit_ = NULL;
  if (GetArenaNoVirtual() == NULL && minnorm_ != NULL) {
    delete minnorm_;
  }
  minnorm_ = NULL;
  if (GetArenaNoVirtual() == NULL && maxnorm_ != NULL) {
    delete maxnorm_;
  }
  maxnorm_ = NULL;
  if (GetArenaNoVirtual() == NULL && defaultval_ != NULL) {
    delete defaultval_;
  }
  defaultval_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && valueindex_ != NULL) {
    delete valueindex_;
  }
  valueindex_ = NULL;
  if (GetArenaNoVirtual() == NULL && properties_ != NULL) {
    delete properties_;
  }
  properties_ = NULL;
  type_ = 0;
}

bool ParamSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.ParamSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tctrl.schema.ParamType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::tctrl::schema::ParamType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string otherType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_othertype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->othertype().data(), this->othertype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.otherType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value minLimit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_minlimit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value maxLimit = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maxlimit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value minNorm = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_minnorm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value maxNorm = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maxnorm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value defaultVal = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Value value = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int32Value valueIndex = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_valueindex()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ParamPartSpec part = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_part()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string style = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_style()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->style().data(), this->style().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.style"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ParamOption option = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_option()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string optionListKey = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_optionlistkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->optionlistkey().data(), this->optionlistkey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.optionListKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tag = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag(this->tag_size() - 1).data(),
            this->tag(this->tag_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string help = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_help()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->help().data(), this->help().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.help"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string offHelp = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offhelp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->offhelp().data(), this->offhelp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.offHelp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buttonText = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buttontext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buttontext().data(), this->buttontext().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.buttonText"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string buttonOffText = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buttonofftext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->buttonofftext().data(), this->buttonofftext().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ParamSpec.buttonOffText"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct properties = 1000;
      case 1000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8002u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.ParamSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.ParamSpec)
  return false;
#undef DO_
}

void ParamSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.ParamSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // .tctrl.schema.ParamType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->path(), output);
  }

  // string otherType = 5;
  if (this->othertype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->othertype().data(), this->othertype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.otherType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->othertype(), output);
  }

  // .google.protobuf.Value minLimit = 6;
  if (this->has_minlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->minlimit_, output);
  }

  // .google.protobuf.Value maxLimit = 7;
  if (this->has_maxlimit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->maxlimit_, output);
  }

  // .google.protobuf.Value minNorm = 8;
  if (this->has_minnorm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->minnorm_, output);
  }

  // .google.protobuf.Value maxNorm = 9;
  if (this->has_maxnorm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->maxnorm_, output);
  }

  // .google.protobuf.Value defaultVal = 10;
  if (this->has_defaultval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->defaultval_, output);
  }

  // .google.protobuf.Value value = 11;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->value_, output);
  }

  // .google.protobuf.Int32Value valueIndex = 12;
  if (this->has_valueindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->valueindex_, output);
  }

  // repeated .tctrl.schema.ParamPartSpec part = 13;
  for (unsigned int i = 0, n = this->part_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->part(i), output);
  }

  // string style = 14;
  if (this->style().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->style().data(), this->style().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.style");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->style(), output);
  }

  // string group = 15;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->group(), output);
  }

  // repeated .tctrl.schema.ParamOption option = 16;
  for (unsigned int i = 0, n = this->option_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->option(i), output);
  }

  // string optionListKey = 17;
  if (this->optionlistkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionlistkey().data(), this->optionlistkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.optionListKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->optionlistkey(), output);
  }

  // repeated string tag = 18;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.tag");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->tag(i), output);
  }

  // string help = 19;
  if (this->help().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->help().data(), this->help().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.help");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->help(), output);
  }

  // string offHelp = 20;
  if (this->offhelp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->offhelp().data(), this->offhelp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.offHelp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->offhelp(), output);
  }

  // string buttonText = 21;
  if (this->buttontext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buttontext().data(), this->buttontext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.buttonText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->buttontext(), output);
  }

  // string buttonOffText = 22;
  if (this->buttonofftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buttonofftext().data(), this->buttonofftext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.buttonOffText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->buttonofftext(), output);
  }

  // .google.protobuf.Struct properties = 1000;
  if (this->has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1000, *this->properties_, output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.ParamSpec)
}

::google::protobuf::uint8* ParamSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.ParamSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // .tctrl.schema.ParamType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->path(), target);
  }

  // string otherType = 5;
  if (this->othertype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->othertype().data(), this->othertype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.otherType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->othertype(), target);
  }

  // .google.protobuf.Value minLimit = 6;
  if (this->has_minlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->minlimit_, deterministic, target);
  }

  // .google.protobuf.Value maxLimit = 7;
  if (this->has_maxlimit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->maxlimit_, deterministic, target);
  }

  // .google.protobuf.Value minNorm = 8;
  if (this->has_minnorm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->minnorm_, deterministic, target);
  }

  // .google.protobuf.Value maxNorm = 9;
  if (this->has_maxnorm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->maxnorm_, deterministic, target);
  }

  // .google.protobuf.Value defaultVal = 10;
  if (this->has_defaultval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->defaultval_, deterministic, target);
  }

  // .google.protobuf.Value value = 11;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->value_, deterministic, target);
  }

  // .google.protobuf.Int32Value valueIndex = 12;
  if (this->has_valueindex()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->valueindex_, deterministic, target);
  }

  // repeated .tctrl.schema.ParamPartSpec part = 13;
  for (unsigned int i = 0, n = this->part_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->part(i), deterministic, target);
  }

  // string style = 14;
  if (this->style().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->style().data(), this->style().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.style");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->style(), target);
  }

  // string group = 15;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->group(), target);
  }

  // repeated .tctrl.schema.ParamOption option = 16;
  for (unsigned int i = 0, n = this->option_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, this->option(i), deterministic, target);
  }

  // string optionListKey = 17;
  if (this->optionlistkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->optionlistkey().data(), this->optionlistkey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.optionListKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->optionlistkey(), target);
  }

  // repeated string tag = 18;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.tag");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(18, this->tag(i), target);
  }

  // string help = 19;
  if (this->help().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->help().data(), this->help().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.help");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->help(), target);
  }

  // string offHelp = 20;
  if (this->offhelp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->offhelp().data(), this->offhelp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.offHelp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->offhelp(), target);
  }

  // string buttonText = 21;
  if (this->buttontext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buttontext().data(), this->buttontext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.buttonText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->buttontext(), target);
  }

  // string buttonOffText = 22;
  if (this->buttonofftext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->buttonofftext().data(), this->buttonofftext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ParamSpec.buttonOffText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->buttonofftext(), target);
  }

  // .google.protobuf.Struct properties = 1000;
  if (this->has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1000, *this->properties_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.ParamSpec)
  return target;
}

size_t ParamSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.ParamSpec)
  size_t total_size = 0;

  // repeated .tctrl.schema.ParamPartSpec part = 13;
  {
    unsigned int count = this->part_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->part(i));
    }
  }

  // repeated .tctrl.schema.ParamOption option = 16;
  {
    unsigned int count = this->option_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->option(i));
    }
  }

  // repeated string tag = 18;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->tag_size());
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tag(i));
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string otherType = 5;
  if (this->othertype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->othertype());
  }

  // string style = 14;
  if (this->style().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->style());
  }

  // string group = 15;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  // string optionListKey = 17;
  if (this->optionlistkey().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->optionlistkey());
  }

  // string help = 19;
  if (this->help().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->help());
  }

  // string offHelp = 20;
  if (this->offhelp().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->offhelp());
  }

  // string buttonText = 21;
  if (this->buttontext().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buttontext());
  }

  // string buttonOffText = 22;
  if (this->buttonofftext().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buttonofftext());
  }

  // .google.protobuf.Value minLimit = 6;
  if (this->has_minlimit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->minlimit_);
  }

  // .google.protobuf.Value maxLimit = 7;
  if (this->has_maxlimit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->maxlimit_);
  }

  // .google.protobuf.Value minNorm = 8;
  if (this->has_minnorm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->minnorm_);
  }

  // .google.protobuf.Value maxNorm = 9;
  if (this->has_maxnorm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->maxnorm_);
  }

  // .google.protobuf.Value defaultVal = 10;
  if (this->has_defaultval()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->defaultval_);
  }

  // .google.protobuf.Value value = 11;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  // .google.protobuf.Int32Value valueIndex = 12;
  if (this->has_valueindex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->valueindex_);
  }

  // .google.protobuf.Struct properties = 1000;
  if (this->has_properties()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->properties_);
  }

  // .tctrl.schema.ParamType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParamSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.ParamSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.ParamSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.ParamSpec)
    MergeFrom(*source);
  }
}

void ParamSpec::MergeFrom(const ParamSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.ParamSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  part_.MergeFrom(from.part_);
  option_.MergeFrom(from.option_);
  tag_.MergeFrom(from.tag_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.othertype().size() > 0) {

    othertype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.othertype_);
  }
  if (from.style().size() > 0) {

    style_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.style_);
  }
  if (from.group().size() > 0) {

    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  if (from.optionlistkey().size() > 0) {

    optionlistkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.optionlistkey_);
  }
  if (from.help().size() > 0) {

    help_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.help_);
  }
  if (from.offhelp().size() > 0) {

    offhelp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offhelp_);
  }
  if (from.buttontext().size() > 0) {

    buttontext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buttontext_);
  }
  if (from.buttonofftext().size() > 0) {

    buttonofftext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buttonofftext_);
  }
  if (from.has_minlimit()) {
    mutable_minlimit()->::google::protobuf::Value::MergeFrom(from.minlimit());
  }
  if (from.has_maxlimit()) {
    mutable_maxlimit()->::google::protobuf::Value::MergeFrom(from.maxlimit());
  }
  if (from.has_minnorm()) {
    mutable_minnorm()->::google::protobuf::Value::MergeFrom(from.minnorm());
  }
  if (from.has_maxnorm()) {
    mutable_maxnorm()->::google::protobuf::Value::MergeFrom(from.maxnorm());
  }
  if (from.has_defaultval()) {
    mutable_defaultval()->::google::protobuf::Value::MergeFrom(from.defaultval());
  }
  if (from.has_value()) {
    mutable_value()->::google::protobuf::Value::MergeFrom(from.value());
  }
  if (from.has_valueindex()) {
    mutable_valueindex()->::google::protobuf::Int32Value::MergeFrom(from.valueindex());
  }
  if (from.has_properties()) {
    mutable_properties()->::google::protobuf::Struct::MergeFrom(from.properties());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ParamSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.ParamSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamSpec::CopyFrom(const ParamSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.ParamSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamSpec::IsInitialized() const {
  return true;
}

void ParamSpec::Swap(ParamSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamSpec::InternalSwap(ParamSpec* other) {
  part_.InternalSwap(&other->part_);
  option_.InternalSwap(&other->option_);
  tag_.InternalSwap(&other->tag_);
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  path_.Swap(&other->path_);
  othertype_.Swap(&other->othertype_);
  style_.Swap(&other->style_);
  group_.Swap(&other->group_);
  optionlistkey_.Swap(&other->optionlistkey_);
  help_.Swap(&other->help_);
  offhelp_.Swap(&other->offhelp_);
  buttontext_.Swap(&other->buttontext_);
  buttonofftext_.Swap(&other->buttonofftext_);
  std::swap(minlimit_, other->minlimit_);
  std::swap(maxlimit_, other->maxlimit_);
  std::swap(minnorm_, other->minnorm_);
  std::swap(maxnorm_, other->maxnorm_);
  std::swap(defaultval_, other->defaultval_);
  std::swap(value_, other->value_);
  std::swap(valueindex_, other->valueindex_);
  std::swap(properties_, other->properties_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParamSpec::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParamSpec

// string key = 1;
void ParamSpec::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.key)
  return key_.GetNoArena();
}
void ParamSpec::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.key)
}
#if LANG_CXX11
void ParamSpec::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.key)
}
#endif
void ParamSpec::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.key)
}
void ParamSpec::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.key)
}
::std::string* ParamSpec::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.key)
}

// string label = 2;
void ParamSpec::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.label)
  return label_.GetNoArena();
}
void ParamSpec::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.label)
}
#if LANG_CXX11
void ParamSpec::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.label)
}
#endif
void ParamSpec::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.label)
}
void ParamSpec::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.label)
}
::std::string* ParamSpec::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.label)
}

// .tctrl.schema.ParamType type = 3;
void ParamSpec::clear_type() {
  type_ = 0;
}
::tctrl::schema::ParamType ParamSpec::type() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.type)
  return static_cast< ::tctrl::schema::ParamType >(type_);
}
void ParamSpec::set_type(::tctrl::schema::ParamType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.type)
}

// string path = 4;
void ParamSpec::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::path() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.path)
  return path_.GetNoArena();
}
void ParamSpec::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.path)
}
#if LANG_CXX11
void ParamSpec::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.path)
}
#endif
void ParamSpec::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.path)
}
void ParamSpec::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.path)
}
::std::string* ParamSpec::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_path() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.path)
}

// string otherType = 5;
void ParamSpec::clear_othertype() {
  othertype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::othertype() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.otherType)
  return othertype_.GetNoArena();
}
void ParamSpec::set_othertype(const ::std::string& value) {
  
  othertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.otherType)
}
#if LANG_CXX11
void ParamSpec::set_othertype(::std::string&& value) {
  
  othertype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.otherType)
}
#endif
void ParamSpec::set_othertype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  othertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.otherType)
}
void ParamSpec::set_othertype(const char* value, size_t size) {
  
  othertype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.otherType)
}
::std::string* ParamSpec::mutable_othertype() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.otherType)
  return othertype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_othertype() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.otherType)
  
  return othertype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_othertype(::std::string* othertype) {
  if (othertype != NULL) {
    
  } else {
    
  }
  othertype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), othertype);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.otherType)
}

// .google.protobuf.Value minLimit = 6;
bool ParamSpec::has_minlimit() const {
  return this != internal_default_instance() && minlimit_ != NULL;
}
void ParamSpec::clear_minlimit() {
  if (GetArenaNoVirtual() == NULL && minlimit_ != NULL) delete minlimit_;
  minlimit_ = NULL;
}
const ::google::protobuf::Value& ParamSpec::minlimit() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.minLimit)
  return minlimit_ != NULL ? *minlimit_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamSpec::mutable_minlimit() {
  
  if (minlimit_ == NULL) {
    minlimit_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.minLimit)
  return minlimit_;
}
::google::protobuf::Value* ParamSpec::release_minlimit() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.minLimit)
  
  ::google::protobuf::Value* temp = minlimit_;
  minlimit_ = NULL;
  return temp;
}
void ParamSpec::set_allocated_minlimit(::google::protobuf::Value* minlimit) {
  delete minlimit_;
  if (minlimit != NULL && minlimit->GetArena() != NULL) {
    ::google::protobuf::Value* new_minlimit = new ::google::protobuf::Value;
    new_minlimit->CopyFrom(*minlimit);
    minlimit = new_minlimit;
  }
  minlimit_ = minlimit;
  if (minlimit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.minLimit)
}

// .google.protobuf.Value maxLimit = 7;
bool ParamSpec::has_maxlimit() const {
  return this != internal_default_instance() && maxlimit_ != NULL;
}
void ParamSpec::clear_maxlimit() {
  if (GetArenaNoVirtual() == NULL && maxlimit_ != NULL) delete maxlimit_;
  maxlimit_ = NULL;
}
const ::google::protobuf::Value& ParamSpec::maxlimit() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.maxLimit)
  return maxlimit_ != NULL ? *maxlimit_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamSpec::mutable_maxlimit() {
  
  if (maxlimit_ == NULL) {
    maxlimit_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.maxLimit)
  return maxlimit_;
}
::google::protobuf::Value* ParamSpec::release_maxlimit() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.maxLimit)
  
  ::google::protobuf::Value* temp = maxlimit_;
  maxlimit_ = NULL;
  return temp;
}
void ParamSpec::set_allocated_maxlimit(::google::protobuf::Value* maxlimit) {
  delete maxlimit_;
  if (maxlimit != NULL && maxlimit->GetArena() != NULL) {
    ::google::protobuf::Value* new_maxlimit = new ::google::protobuf::Value;
    new_maxlimit->CopyFrom(*maxlimit);
    maxlimit = new_maxlimit;
  }
  maxlimit_ = maxlimit;
  if (maxlimit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.maxLimit)
}

// .google.protobuf.Value minNorm = 8;
bool ParamSpec::has_minnorm() const {
  return this != internal_default_instance() && minnorm_ != NULL;
}
void ParamSpec::clear_minnorm() {
  if (GetArenaNoVirtual() == NULL && minnorm_ != NULL) delete minnorm_;
  minnorm_ = NULL;
}
const ::google::protobuf::Value& ParamSpec::minnorm() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.minNorm)
  return minnorm_ != NULL ? *minnorm_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamSpec::mutable_minnorm() {
  
  if (minnorm_ == NULL) {
    minnorm_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.minNorm)
  return minnorm_;
}
::google::protobuf::Value* ParamSpec::release_minnorm() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.minNorm)
  
  ::google::protobuf::Value* temp = minnorm_;
  minnorm_ = NULL;
  return temp;
}
void ParamSpec::set_allocated_minnorm(::google::protobuf::Value* minnorm) {
  delete minnorm_;
  if (minnorm != NULL && minnorm->GetArena() != NULL) {
    ::google::protobuf::Value* new_minnorm = new ::google::protobuf::Value;
    new_minnorm->CopyFrom(*minnorm);
    minnorm = new_minnorm;
  }
  minnorm_ = minnorm;
  if (minnorm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.minNorm)
}

// .google.protobuf.Value maxNorm = 9;
bool ParamSpec::has_maxnorm() const {
  return this != internal_default_instance() && maxnorm_ != NULL;
}
void ParamSpec::clear_maxnorm() {
  if (GetArenaNoVirtual() == NULL && maxnorm_ != NULL) delete maxnorm_;
  maxnorm_ = NULL;
}
const ::google::protobuf::Value& ParamSpec::maxnorm() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.maxNorm)
  return maxnorm_ != NULL ? *maxnorm_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamSpec::mutable_maxnorm() {
  
  if (maxnorm_ == NULL) {
    maxnorm_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.maxNorm)
  return maxnorm_;
}
::google::protobuf::Value* ParamSpec::release_maxnorm() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.maxNorm)
  
  ::google::protobuf::Value* temp = maxnorm_;
  maxnorm_ = NULL;
  return temp;
}
void ParamSpec::set_allocated_maxnorm(::google::protobuf::Value* maxnorm) {
  delete maxnorm_;
  if (maxnorm != NULL && maxnorm->GetArena() != NULL) {
    ::google::protobuf::Value* new_maxnorm = new ::google::protobuf::Value;
    new_maxnorm->CopyFrom(*maxnorm);
    maxnorm = new_maxnorm;
  }
  maxnorm_ = maxnorm;
  if (maxnorm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.maxNorm)
}

// .google.protobuf.Value defaultVal = 10;
bool ParamSpec::has_defaultval() const {
  return this != internal_default_instance() && defaultval_ != NULL;
}
void ParamSpec::clear_defaultval() {
  if (GetArenaNoVirtual() == NULL && defaultval_ != NULL) delete defaultval_;
  defaultval_ = NULL;
}
const ::google::protobuf::Value& ParamSpec::defaultval() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.defaultVal)
  return defaultval_ != NULL ? *defaultval_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamSpec::mutable_defaultval() {
  
  if (defaultval_ == NULL) {
    defaultval_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.defaultVal)
  return defaultval_;
}
::google::protobuf::Value* ParamSpec::release_defaultval() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.defaultVal)
  
  ::google::protobuf::Value* temp = defaultval_;
  defaultval_ = NULL;
  return temp;
}
void ParamSpec::set_allocated_defaultval(::google::protobuf::Value* defaultval) {
  delete defaultval_;
  if (defaultval != NULL && defaultval->GetArena() != NULL) {
    ::google::protobuf::Value* new_defaultval = new ::google::protobuf::Value;
    new_defaultval->CopyFrom(*defaultval);
    defaultval = new_defaultval;
  }
  defaultval_ = defaultval;
  if (defaultval) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.defaultVal)
}

// .google.protobuf.Value value = 11;
bool ParamSpec::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
void ParamSpec::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::google::protobuf::Value& ParamSpec::value() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.value)
  return value_ != NULL ? *value_
                         : *::google::protobuf::Value::internal_default_instance();
}
::google::protobuf::Value* ParamSpec::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::google::protobuf::Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.value)
  return value_;
}
::google::protobuf::Value* ParamSpec::release_value() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.value)
  
  ::google::protobuf::Value* temp = value_;
  value_ = NULL;
  return temp;
}
void ParamSpec::set_allocated_value(::google::protobuf::Value* value) {
  delete value_;
  if (value != NULL && value->GetArena() != NULL) {
    ::google::protobuf::Value* new_value = new ::google::protobuf::Value;
    new_value->CopyFrom(*value);
    value = new_value;
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.value)
}

// .google.protobuf.Int32Value valueIndex = 12;
bool ParamSpec::has_valueindex() const {
  return this != internal_default_instance() && valueindex_ != NULL;
}
void ParamSpec::clear_valueindex() {
  if (GetArenaNoVirtual() == NULL && valueindex_ != NULL) delete valueindex_;
  valueindex_ = NULL;
}
const ::google::protobuf::Int32Value& ParamSpec::valueindex() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.valueIndex)
  return valueindex_ != NULL ? *valueindex_
                         : *::google::protobuf::Int32Value::internal_default_instance();
}
::google::protobuf::Int32Value* ParamSpec::mutable_valueindex() {
  
  if (valueindex_ == NULL) {
    valueindex_ = new ::google::protobuf::Int32Value;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.valueIndex)
  return valueindex_;
}
::google::protobuf::Int32Value* ParamSpec::release_valueindex() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.valueIndex)
  
  ::google::protobuf::Int32Value* temp = valueindex_;
  valueindex_ = NULL;
  return temp;
}
void ParamSpec::set_allocated_valueindex(::google::protobuf::Int32Value* valueindex) {
  delete valueindex_;
  if (valueindex != NULL && valueindex->GetArena() != NULL) {
    ::google::protobuf::Int32Value* new_valueindex = new ::google::protobuf::Int32Value;
    new_valueindex->CopyFrom(*valueindex);
    valueindex = new_valueindex;
  }
  valueindex_ = valueindex;
  if (valueindex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.valueIndex)
}

// repeated .tctrl.schema.ParamPartSpec part = 13;
int ParamSpec::part_size() const {
  return part_.size();
}
void ParamSpec::clear_part() {
  part_.Clear();
}
const ::tctrl::schema::ParamPartSpec& ParamSpec::part(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.part)
  return part_.Get(index);
}
::tctrl::schema::ParamPartSpec* ParamSpec::mutable_part(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.part)
  return part_.Mutable(index);
}
::tctrl::schema::ParamPartSpec* ParamSpec::add_part() {
  // @@protoc_insertion_point(field_add:tctrl.schema.ParamSpec.part)
  return part_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamPartSpec >*
ParamSpec::mutable_part() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ParamSpec.part)
  return &part_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamPartSpec >&
ParamSpec::part() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ParamSpec.part)
  return part_;
}

// string style = 14;
void ParamSpec::clear_style() {
  style_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::style() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.style)
  return style_.GetNoArena();
}
void ParamSpec::set_style(const ::std::string& value) {
  
  style_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.style)
}
#if LANG_CXX11
void ParamSpec::set_style(::std::string&& value) {
  
  style_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.style)
}
#endif
void ParamSpec::set_style(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  style_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.style)
}
void ParamSpec::set_style(const char* value, size_t size) {
  
  style_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.style)
}
::std::string* ParamSpec::mutable_style() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.style)
  return style_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_style() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.style)
  
  return style_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_style(::std::string* style) {
  if (style != NULL) {
    
  } else {
    
  }
  style_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), style);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.style)
}

// string group = 15;
void ParamSpec::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::group() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.group)
  return group_.GetNoArena();
}
void ParamSpec::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.group)
}
#if LANG_CXX11
void ParamSpec::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.group)
}
#endif
void ParamSpec::set_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.group)
}
void ParamSpec::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.group)
}
::std::string* ParamSpec::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_group() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.group)
}

// repeated .tctrl.schema.ParamOption option = 16;
int ParamSpec::option_size() const {
  return option_.size();
}
void ParamSpec::clear_option() {
  option_.Clear();
}
const ::tctrl::schema::ParamOption& ParamSpec::option(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.option)
  return option_.Get(index);
}
::tctrl::schema::ParamOption* ParamSpec::mutable_option(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.option)
  return option_.Mutable(index);
}
::tctrl::schema::ParamOption* ParamSpec::add_option() {
  // @@protoc_insertion_point(field_add:tctrl.schema.ParamSpec.option)
  return option_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamOption >*
ParamSpec::mutable_option() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ParamSpec.option)
  return &option_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamOption >&
ParamSpec::option() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ParamSpec.option)
  return option_;
}

// string optionListKey = 17;
void ParamSpec::clear_optionlistkey() {
  optionlistkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::optionlistkey() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.optionListKey)
  return optionlistkey_.GetNoArena();
}
void ParamSpec::set_optionlistkey(const ::std::string& value) {
  
  optionlistkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.optionListKey)
}
#if LANG_CXX11
void ParamSpec::set_optionlistkey(::std::string&& value) {
  
  optionlistkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.optionListKey)
}
#endif
void ParamSpec::set_optionlistkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  optionlistkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.optionListKey)
}
void ParamSpec::set_optionlistkey(const char* value, size_t size) {
  
  optionlistkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.optionListKey)
}
::std::string* ParamSpec::mutable_optionlistkey() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.optionListKey)
  return optionlistkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_optionlistkey() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.optionListKey)
  
  return optionlistkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_optionlistkey(::std::string* optionlistkey) {
  if (optionlistkey != NULL) {
    
  } else {
    
  }
  optionlistkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optionlistkey);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.optionListKey)
}

// repeated string tag = 18;
int ParamSpec::tag_size() const {
  return tag_.size();
}
void ParamSpec::clear_tag() {
  tag_.Clear();
}
const ::std::string& ParamSpec::tag(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.tag)
  return tag_.Get(index);
}
::std::string* ParamSpec::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.tag)
  return tag_.Mutable(index);
}
void ParamSpec::set_tag(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.tag)
  tag_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ParamSpec::set_tag(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.tag)
  tag_.Mutable(index)->assign(std::move(value));
}
#endif
void ParamSpec::set_tag(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.tag)
}
void ParamSpec::set_tag(int index, const char* value, size_t size) {
  tag_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.tag)
}
::std::string* ParamSpec::add_tag() {
  // @@protoc_insertion_point(field_add_mutable:tctrl.schema.ParamSpec.tag)
  return tag_.Add();
}
void ParamSpec::add_tag(const ::std::string& value) {
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tctrl.schema.ParamSpec.tag)
}
#if LANG_CXX11
void ParamSpec::add_tag(::std::string&& value) {
  tag_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tctrl.schema.ParamSpec.tag)
}
#endif
void ParamSpec::add_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tctrl.schema.ParamSpec.tag)
}
void ParamSpec::add_tag(const char* value, size_t size) {
  tag_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tctrl.schema.ParamSpec.tag)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ParamSpec::tag() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ParamSpec.tag)
  return tag_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ParamSpec::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ParamSpec.tag)
  return &tag_;
}

// string help = 19;
void ParamSpec::clear_help() {
  help_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::help() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.help)
  return help_.GetNoArena();
}
void ParamSpec::set_help(const ::std::string& value) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.help)
}
#if LANG_CXX11
void ParamSpec::set_help(::std::string&& value) {
  
  help_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.help)
}
#endif
void ParamSpec::set_help(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.help)
}
void ParamSpec::set_help(const char* value, size_t size) {
  
  help_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.help)
}
::std::string* ParamSpec::mutable_help() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.help)
  return help_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_help() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.help)
  
  return help_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_help(::std::string* help) {
  if (help != NULL) {
    
  } else {
    
  }
  help_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), help);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.help)
}

// string offHelp = 20;
void ParamSpec::clear_offhelp() {
  offhelp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::offhelp() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.offHelp)
  return offhelp_.GetNoArena();
}
void ParamSpec::set_offhelp(const ::std::string& value) {
  
  offhelp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.offHelp)
}
#if LANG_CXX11
void ParamSpec::set_offhelp(::std::string&& value) {
  
  offhelp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.offHelp)
}
#endif
void ParamSpec::set_offhelp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  offhelp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.offHelp)
}
void ParamSpec::set_offhelp(const char* value, size_t size) {
  
  offhelp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.offHelp)
}
::std::string* ParamSpec::mutable_offhelp() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.offHelp)
  return offhelp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_offhelp() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.offHelp)
  
  return offhelp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_offhelp(::std::string* offhelp) {
  if (offhelp != NULL) {
    
  } else {
    
  }
  offhelp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offhelp);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.offHelp)
}

// string buttonText = 21;
void ParamSpec::clear_buttontext() {
  buttontext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::buttontext() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.buttonText)
  return buttontext_.GetNoArena();
}
void ParamSpec::set_buttontext(const ::std::string& value) {
  
  buttontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.buttonText)
}
#if LANG_CXX11
void ParamSpec::set_buttontext(::std::string&& value) {
  
  buttontext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.buttonText)
}
#endif
void ParamSpec::set_buttontext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  buttontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.buttonText)
}
void ParamSpec::set_buttontext(const char* value, size_t size) {
  
  buttontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.buttonText)
}
::std::string* ParamSpec::mutable_buttontext() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.buttonText)
  return buttontext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_buttontext() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.buttonText)
  
  return buttontext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_buttontext(::std::string* buttontext) {
  if (buttontext != NULL) {
    
  } else {
    
  }
  buttontext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buttontext);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.buttonText)
}

// string buttonOffText = 22;
void ParamSpec::clear_buttonofftext() {
  buttonofftext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ParamSpec::buttonofftext() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.buttonOffText)
  return buttonofftext_.GetNoArena();
}
void ParamSpec::set_buttonofftext(const ::std::string& value) {
  
  buttonofftext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ParamSpec.buttonOffText)
}
#if LANG_CXX11
void ParamSpec::set_buttonofftext(::std::string&& value) {
  
  buttonofftext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ParamSpec.buttonOffText)
}
#endif
void ParamSpec::set_buttonofftext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  buttonofftext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ParamSpec.buttonOffText)
}
void ParamSpec::set_buttonofftext(const char* value, size_t size) {
  
  buttonofftext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ParamSpec.buttonOffText)
}
::std::string* ParamSpec::mutable_buttonofftext() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.buttonOffText)
  return buttonofftext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParamSpec::release_buttonofftext() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.buttonOffText)
  
  return buttonofftext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParamSpec::set_allocated_buttonofftext(::std::string* buttonofftext) {
  if (buttonofftext != NULL) {
    
  } else {
    
  }
  buttonofftext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buttonofftext);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.buttonOffText)
}

// .google.protobuf.Struct properties = 1000;
bool ParamSpec::has_properties() const {
  return this != internal_default_instance() && properties_ != NULL;
}
void ParamSpec::clear_properties() {
  if (GetArenaNoVirtual() == NULL && properties_ != NULL) delete properties_;
  properties_ = NULL;
}
const ::google::protobuf::Struct& ParamSpec::properties() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ParamSpec.properties)
  return properties_ != NULL ? *properties_
                         : *::google::protobuf::Struct::internal_default_instance();
}
::google::protobuf::Struct* ParamSpec::mutable_properties() {
  
  if (properties_ == NULL) {
    properties_ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ParamSpec.properties)
  return properties_;
}
::google::protobuf::Struct* ParamSpec::release_properties() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ParamSpec.properties)
  
  ::google::protobuf::Struct* temp = properties_;
  properties_ = NULL;
  return temp;
}
void ParamSpec::set_allocated_properties(::google::protobuf::Struct* properties) {
  delete properties_;
  if (properties != NULL && properties->GetArena() != NULL) {
    ::google::protobuf::Struct* new_properties = new ::google::protobuf::Struct;
    new_properties->CopyFrom(*properties);
    properties = new_properties;
  }
  properties_ = properties;
  if (properties) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ParamSpec.properties)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleTypeSpec::kKeyFieldNumber;
const int ModuleTypeSpec::kLabelFieldNumber;
const int ModuleTypeSpec::kParamFieldNumber;
const int ModuleTypeSpec::kParamGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleTypeSpec::ModuleTypeSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.ModuleTypeSpec)
}
ModuleTypeSpec::ModuleTypeSpec(const ModuleTypeSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      param_(from.param_),
      paramgroup_(from.paramgroup_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.ModuleTypeSpec)
}

void ModuleTypeSpec::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModuleTypeSpec::~ModuleTypeSpec() {
  // @@protoc_insertion_point(destructor:tctrl.schema.ModuleTypeSpec)
  SharedDtor();
}

void ModuleTypeSpec::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModuleTypeSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleTypeSpec::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleTypeSpec& ModuleTypeSpec::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModuleTypeSpec* ModuleTypeSpec::New(::google::protobuf::Arena* arena) const {
  ModuleTypeSpec* n = new ModuleTypeSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModuleTypeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.ModuleTypeSpec)
  param_.Clear();
  paramgroup_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModuleTypeSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.ModuleTypeSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ModuleTypeSpec.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ModuleTypeSpec.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ParamSpec param = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.GroupInfo paramGroup = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_paramgroup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.ModuleTypeSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.ModuleTypeSpec)
  return false;
#undef DO_
}

void ModuleTypeSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.ModuleTypeSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleTypeSpec.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleTypeSpec.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // repeated .tctrl.schema.ParamSpec param = 7;
  for (unsigned int i = 0, n = this->param_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->param(i), output);
  }

  // repeated .tctrl.schema.GroupInfo paramGroup = 9;
  for (unsigned int i = 0, n = this->paramgroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->paramgroup(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.ModuleTypeSpec)
}

::google::protobuf::uint8* ModuleTypeSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.ModuleTypeSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleTypeSpec.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleTypeSpec.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // repeated .tctrl.schema.ParamSpec param = 7;
  for (unsigned int i = 0, n = this->param_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->param(i), deterministic, target);
  }

  // repeated .tctrl.schema.GroupInfo paramGroup = 9;
  for (unsigned int i = 0, n = this->paramgroup_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->paramgroup(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.ModuleTypeSpec)
  return target;
}

size_t ModuleTypeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.ModuleTypeSpec)
  size_t total_size = 0;

  // repeated .tctrl.schema.ParamSpec param = 7;
  {
    unsigned int count = this->param_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->param(i));
    }
  }

  // repeated .tctrl.schema.GroupInfo paramGroup = 9;
  {
    unsigned int count = this->paramgroup_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->paramgroup(i));
    }
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleTypeSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.ModuleTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleTypeSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleTypeSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.ModuleTypeSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.ModuleTypeSpec)
    MergeFrom(*source);
  }
}

void ModuleTypeSpec::MergeFrom(const ModuleTypeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.ModuleTypeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_.MergeFrom(from.param_);
  paramgroup_.MergeFrom(from.paramgroup_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
}

void ModuleTypeSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.ModuleTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleTypeSpec::CopyFrom(const ModuleTypeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.ModuleTypeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleTypeSpec::IsInitialized() const {
  return true;
}

void ModuleTypeSpec::Swap(ModuleTypeSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleTypeSpec::InternalSwap(ModuleTypeSpec* other) {
  param_.InternalSwap(&other->param_);
  paramgroup_.InternalSwap(&other->paramgroup_);
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModuleTypeSpec::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModuleTypeSpec

// string key = 1;
void ModuleTypeSpec::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModuleTypeSpec::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleTypeSpec.key)
  return key_.GetNoArena();
}
void ModuleTypeSpec::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleTypeSpec.key)
}
#if LANG_CXX11
void ModuleTypeSpec::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ModuleTypeSpec.key)
}
#endif
void ModuleTypeSpec::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ModuleTypeSpec.key)
}
void ModuleTypeSpec::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ModuleTypeSpec.key)
}
::std::string* ModuleTypeSpec::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleTypeSpec.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModuleTypeSpec::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ModuleTypeSpec.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModuleTypeSpec::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ModuleTypeSpec.key)
}

// string label = 2;
void ModuleTypeSpec::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModuleTypeSpec::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleTypeSpec.label)
  return label_.GetNoArena();
}
void ModuleTypeSpec::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleTypeSpec.label)
}
#if LANG_CXX11
void ModuleTypeSpec::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ModuleTypeSpec.label)
}
#endif
void ModuleTypeSpec::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ModuleTypeSpec.label)
}
void ModuleTypeSpec::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ModuleTypeSpec.label)
}
::std::string* ModuleTypeSpec::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleTypeSpec.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModuleTypeSpec::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ModuleTypeSpec.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModuleTypeSpec::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ModuleTypeSpec.label)
}

// repeated .tctrl.schema.ParamSpec param = 7;
int ModuleTypeSpec::param_size() const {
  return param_.size();
}
void ModuleTypeSpec::clear_param() {
  param_.Clear();
}
const ::tctrl::schema::ParamSpec& ModuleTypeSpec::param(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleTypeSpec.param)
  return param_.Get(index);
}
::tctrl::schema::ParamSpec* ModuleTypeSpec::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleTypeSpec.param)
  return param_.Mutable(index);
}
::tctrl::schema::ParamSpec* ModuleTypeSpec::add_param() {
  // @@protoc_insertion_point(field_add:tctrl.schema.ModuleTypeSpec.param)
  return param_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamSpec >*
ModuleTypeSpec::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ModuleTypeSpec.param)
  return &param_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamSpec >&
ModuleTypeSpec::param() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ModuleTypeSpec.param)
  return param_;
}

// repeated .tctrl.schema.GroupInfo paramGroup = 9;
int ModuleTypeSpec::paramgroup_size() const {
  return paramgroup_.size();
}
void ModuleTypeSpec::clear_paramgroup() {
  paramgroup_.Clear();
}
const ::tctrl::schema::GroupInfo& ModuleTypeSpec::paramgroup(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleTypeSpec.paramGroup)
  return paramgroup_.Get(index);
}
::tctrl::schema::GroupInfo* ModuleTypeSpec::mutable_paramgroup(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleTypeSpec.paramGroup)
  return paramgroup_.Mutable(index);
}
::tctrl::schema::GroupInfo* ModuleTypeSpec::add_paramgroup() {
  // @@protoc_insertion_point(field_add:tctrl.schema.ModuleTypeSpec.paramGroup)
  return paramgroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::GroupInfo >*
ModuleTypeSpec::mutable_paramgroup() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ModuleTypeSpec.paramGroup)
  return &paramgroup_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::GroupInfo >&
ModuleTypeSpec::paramgroup() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ModuleTypeSpec.paramGroup)
  return paramgroup_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleSpec::kKeyFieldNumber;
const int ModuleSpec::kLabelFieldNumber;
const int ModuleSpec::kPathFieldNumber;
const int ModuleSpec::kModuleTypeFieldNumber;
const int ModuleSpec::kGroupFieldNumber;
const int ModuleSpec::kTagFieldNumber;
const int ModuleSpec::kParamFieldNumber;
const int ModuleSpec::kChildModuleFieldNumber;
const int ModuleSpec::kParamGroupFieldNumber;
const int ModuleSpec::kChildGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleSpec::ModuleSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.ModuleSpec)
}
ModuleSpec::ModuleSpec(const ModuleSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tag_(from.tag_),
      param_(from.param_),
      childmodule_(from.childmodule_),
      paramgroup_(from.paramgroup_),
      childgroup_(from.childgroup_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  moduletype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.moduletype().size() > 0) {
    moduletype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moduletype_);
  }
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group().size() > 0) {
    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.ModuleSpec)
}

void ModuleSpec::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduletype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModuleSpec::~ModuleSpec() {
  // @@protoc_insertion_point(destructor:tctrl.schema.ModuleSpec)
  SharedDtor();
}

void ModuleSpec::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduletype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModuleSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModuleSpec::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleSpec& ModuleSpec::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModuleSpec* ModuleSpec::New(::google::protobuf::Arena* arena) const {
  ModuleSpec* n = new ModuleSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModuleSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.ModuleSpec)
  tag_.Clear();
  param_.Clear();
  childmodule_.Clear();
  paramgroup_.Clear();
  childgroup_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  moduletype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModuleSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.ModuleSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ModuleSpec.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ModuleSpec.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ModuleSpec.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string moduleType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_moduletype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->moduletype().data(), this->moduletype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ModuleSpec.moduleType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group().data(), this->group().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ModuleSpec.group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tag = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag(this->tag_size() - 1).data(),
            this->tag(this->tag_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ModuleSpec.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ParamSpec param = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ModuleSpec childModule = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_childmodule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.GroupInfo paramGroup = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_paramgroup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.GroupInfo childGroup = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_childgroup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.ModuleSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.ModuleSpec)
  return false;
#undef DO_
}

void ModuleSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.ModuleSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // string moduleType = 4;
  if (this->moduletype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->moduletype().data(), this->moduletype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.moduleType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->moduletype(), output);
  }

  // string group = 5;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->group(), output);
  }

  // repeated string tag = 6;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.tag");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->tag(i), output);
  }

  // repeated .tctrl.schema.ParamSpec param = 7;
  for (unsigned int i = 0, n = this->param_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->param(i), output);
  }

  // repeated .tctrl.schema.ModuleSpec childModule = 8;
  for (unsigned int i = 0, n = this->childmodule_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->childmodule(i), output);
  }

  // repeated .tctrl.schema.GroupInfo paramGroup = 9;
  for (unsigned int i = 0, n = this->paramgroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->paramgroup(i), output);
  }

  // repeated .tctrl.schema.GroupInfo childGroup = 10;
  for (unsigned int i = 0, n = this->childgroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->childgroup(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.ModuleSpec)
}

::google::protobuf::uint8* ModuleSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.ModuleSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // string path = 3;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // string moduleType = 4;
  if (this->moduletype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->moduletype().data(), this->moduletype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.moduleType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->moduletype(), target);
  }

  // string group = 5;
  if (this->group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group().data(), this->group().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->group(), target);
  }

  // repeated string tag = 6;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ModuleSpec.tag");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->tag(i), target);
  }

  // repeated .tctrl.schema.ParamSpec param = 7;
  for (unsigned int i = 0, n = this->param_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->param(i), deterministic, target);
  }

  // repeated .tctrl.schema.ModuleSpec childModule = 8;
  for (unsigned int i = 0, n = this->childmodule_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->childmodule(i), deterministic, target);
  }

  // repeated .tctrl.schema.GroupInfo paramGroup = 9;
  for (unsigned int i = 0, n = this->paramgroup_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->paramgroup(i), deterministic, target);
  }

  // repeated .tctrl.schema.GroupInfo childGroup = 10;
  for (unsigned int i = 0, n = this->childgroup_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->childgroup(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.ModuleSpec)
  return target;
}

size_t ModuleSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.ModuleSpec)
  size_t total_size = 0;

  // repeated string tag = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tag_size());
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tag(i));
  }

  // repeated .tctrl.schema.ParamSpec param = 7;
  {
    unsigned int count = this->param_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->param(i));
    }
  }

  // repeated .tctrl.schema.ModuleSpec childModule = 8;
  {
    unsigned int count = this->childmodule_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->childmodule(i));
    }
  }

  // repeated .tctrl.schema.GroupInfo paramGroup = 9;
  {
    unsigned int count = this->paramgroup_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->paramgroup(i));
    }
  }

  // repeated .tctrl.schema.GroupInfo childGroup = 10;
  {
    unsigned int count = this->childgroup_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->childgroup(i));
    }
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string path = 3;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string moduleType = 4;
  if (this->moduletype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->moduletype());
  }

  // string group = 5;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModuleSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.ModuleSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.ModuleSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.ModuleSpec)
    MergeFrom(*source);
  }
}

void ModuleSpec::MergeFrom(const ModuleSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.ModuleSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_.MergeFrom(from.tag_);
  param_.MergeFrom(from.param_);
  childmodule_.MergeFrom(from.childmodule_);
  paramgroup_.MergeFrom(from.paramgroup_);
  childgroup_.MergeFrom(from.childgroup_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.moduletype().size() > 0) {

    moduletype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.moduletype_);
  }
  if (from.group().size() > 0) {

    group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_);
  }
}

void ModuleSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.ModuleSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleSpec::CopyFrom(const ModuleSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.ModuleSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleSpec::IsInitialized() const {
  return true;
}

void ModuleSpec::Swap(ModuleSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleSpec::InternalSwap(ModuleSpec* other) {
  tag_.InternalSwap(&other->tag_);
  param_.InternalSwap(&other->param_);
  childmodule_.InternalSwap(&other->childmodule_);
  paramgroup_.InternalSwap(&other->paramgroup_);
  childgroup_.InternalSwap(&other->childgroup_);
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  path_.Swap(&other->path_);
  moduletype_.Swap(&other->moduletype_);
  group_.Swap(&other->group_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModuleSpec::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModuleSpec

// string key = 1;
void ModuleSpec::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModuleSpec::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.key)
  return key_.GetNoArena();
}
void ModuleSpec::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleSpec.key)
}
#if LANG_CXX11
void ModuleSpec::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ModuleSpec.key)
}
#endif
void ModuleSpec::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ModuleSpec.key)
}
void ModuleSpec::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ModuleSpec.key)
}
::std::string* ModuleSpec::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModuleSpec::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ModuleSpec.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModuleSpec::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ModuleSpec.key)
}

// string label = 2;
void ModuleSpec::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModuleSpec::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.label)
  return label_.GetNoArena();
}
void ModuleSpec::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleSpec.label)
}
#if LANG_CXX11
void ModuleSpec::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ModuleSpec.label)
}
#endif
void ModuleSpec::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ModuleSpec.label)
}
void ModuleSpec::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ModuleSpec.label)
}
::std::string* ModuleSpec::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModuleSpec::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ModuleSpec.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModuleSpec::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ModuleSpec.label)
}

// string path = 3;
void ModuleSpec::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModuleSpec::path() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.path)
  return path_.GetNoArena();
}
void ModuleSpec::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleSpec.path)
}
#if LANG_CXX11
void ModuleSpec::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ModuleSpec.path)
}
#endif
void ModuleSpec::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ModuleSpec.path)
}
void ModuleSpec::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ModuleSpec.path)
}
::std::string* ModuleSpec::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModuleSpec::release_path() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ModuleSpec.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModuleSpec::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ModuleSpec.path)
}

// string moduleType = 4;
void ModuleSpec::clear_moduletype() {
  moduletype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModuleSpec::moduletype() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.moduleType)
  return moduletype_.GetNoArena();
}
void ModuleSpec::set_moduletype(const ::std::string& value) {
  
  moduletype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleSpec.moduleType)
}
#if LANG_CXX11
void ModuleSpec::set_moduletype(::std::string&& value) {
  
  moduletype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ModuleSpec.moduleType)
}
#endif
void ModuleSpec::set_moduletype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  moduletype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ModuleSpec.moduleType)
}
void ModuleSpec::set_moduletype(const char* value, size_t size) {
  
  moduletype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ModuleSpec.moduleType)
}
::std::string* ModuleSpec::mutable_moduletype() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.moduleType)
  return moduletype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModuleSpec::release_moduletype() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ModuleSpec.moduleType)
  
  return moduletype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModuleSpec::set_allocated_moduletype(::std::string* moduletype) {
  if (moduletype != NULL) {
    
  } else {
    
  }
  moduletype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), moduletype);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ModuleSpec.moduleType)
}

// string group = 5;
void ModuleSpec::clear_group() {
  group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModuleSpec::group() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.group)
  return group_.GetNoArena();
}
void ModuleSpec::set_group(const ::std::string& value) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleSpec.group)
}
#if LANG_CXX11
void ModuleSpec::set_group(::std::string&& value) {
  
  group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ModuleSpec.group)
}
#endif
void ModuleSpec::set_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ModuleSpec.group)
}
void ModuleSpec::set_group(const char* value, size_t size) {
  
  group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ModuleSpec.group)
}
::std::string* ModuleSpec::mutable_group() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.group)
  return group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModuleSpec::release_group() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ModuleSpec.group)
  
  return group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModuleSpec::set_allocated_group(::std::string* group) {
  if (group != NULL) {
    
  } else {
    
  }
  group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ModuleSpec.group)
}

// repeated string tag = 6;
int ModuleSpec::tag_size() const {
  return tag_.size();
}
void ModuleSpec::clear_tag() {
  tag_.Clear();
}
const ::std::string& ModuleSpec::tag(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.tag)
  return tag_.Get(index);
}
::std::string* ModuleSpec::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.tag)
  return tag_.Mutable(index);
}
void ModuleSpec::set_tag(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleSpec.tag)
  tag_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ModuleSpec::set_tag(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tctrl.schema.ModuleSpec.tag)
  tag_.Mutable(index)->assign(std::move(value));
}
#endif
void ModuleSpec::set_tag(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ModuleSpec.tag)
}
void ModuleSpec::set_tag(int index, const char* value, size_t size) {
  tag_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ModuleSpec.tag)
}
::std::string* ModuleSpec::add_tag() {
  // @@protoc_insertion_point(field_add_mutable:tctrl.schema.ModuleSpec.tag)
  return tag_.Add();
}
void ModuleSpec::add_tag(const ::std::string& value) {
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tctrl.schema.ModuleSpec.tag)
}
#if LANG_CXX11
void ModuleSpec::add_tag(::std::string&& value) {
  tag_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tctrl.schema.ModuleSpec.tag)
}
#endif
void ModuleSpec::add_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tctrl.schema.ModuleSpec.tag)
}
void ModuleSpec::add_tag(const char* value, size_t size) {
  tag_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tctrl.schema.ModuleSpec.tag)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ModuleSpec::tag() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ModuleSpec.tag)
  return tag_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ModuleSpec::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ModuleSpec.tag)
  return &tag_;
}

// repeated .tctrl.schema.ParamSpec param = 7;
int ModuleSpec::param_size() const {
  return param_.size();
}
void ModuleSpec::clear_param() {
  param_.Clear();
}
const ::tctrl::schema::ParamSpec& ModuleSpec::param(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.param)
  return param_.Get(index);
}
::tctrl::schema::ParamSpec* ModuleSpec::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.param)
  return param_.Mutable(index);
}
::tctrl::schema::ParamSpec* ModuleSpec::add_param() {
  // @@protoc_insertion_point(field_add:tctrl.schema.ModuleSpec.param)
  return param_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamSpec >*
ModuleSpec::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ModuleSpec.param)
  return &param_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ParamSpec >&
ModuleSpec::param() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ModuleSpec.param)
  return param_;
}

// repeated .tctrl.schema.ModuleSpec childModule = 8;
int ModuleSpec::childmodule_size() const {
  return childmodule_.size();
}
void ModuleSpec::clear_childmodule() {
  childmodule_.Clear();
}
const ::tctrl::schema::ModuleSpec& ModuleSpec::childmodule(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.childModule)
  return childmodule_.Get(index);
}
::tctrl::schema::ModuleSpec* ModuleSpec::mutable_childmodule(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.childModule)
  return childmodule_.Mutable(index);
}
::tctrl::schema::ModuleSpec* ModuleSpec::add_childmodule() {
  // @@protoc_insertion_point(field_add:tctrl.schema.ModuleSpec.childModule)
  return childmodule_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ModuleSpec >*
ModuleSpec::mutable_childmodule() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ModuleSpec.childModule)
  return &childmodule_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ModuleSpec >&
ModuleSpec::childmodule() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ModuleSpec.childModule)
  return childmodule_;
}

// repeated .tctrl.schema.GroupInfo paramGroup = 9;
int ModuleSpec::paramgroup_size() const {
  return paramgroup_.size();
}
void ModuleSpec::clear_paramgroup() {
  paramgroup_.Clear();
}
const ::tctrl::schema::GroupInfo& ModuleSpec::paramgroup(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.paramGroup)
  return paramgroup_.Get(index);
}
::tctrl::schema::GroupInfo* ModuleSpec::mutable_paramgroup(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.paramGroup)
  return paramgroup_.Mutable(index);
}
::tctrl::schema::GroupInfo* ModuleSpec::add_paramgroup() {
  // @@protoc_insertion_point(field_add:tctrl.schema.ModuleSpec.paramGroup)
  return paramgroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::GroupInfo >*
ModuleSpec::mutable_paramgroup() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ModuleSpec.paramGroup)
  return &paramgroup_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::GroupInfo >&
ModuleSpec::paramgroup() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ModuleSpec.paramGroup)
  return paramgroup_;
}

// repeated .tctrl.schema.GroupInfo childGroup = 10;
int ModuleSpec::childgroup_size() const {
  return childgroup_.size();
}
void ModuleSpec::clear_childgroup() {
  childgroup_.Clear();
}
const ::tctrl::schema::GroupInfo& ModuleSpec::childgroup(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ModuleSpec.childGroup)
  return childgroup_.Get(index);
}
::tctrl::schema::GroupInfo* ModuleSpec::mutable_childgroup(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ModuleSpec.childGroup)
  return childgroup_.Mutable(index);
}
::tctrl::schema::GroupInfo* ModuleSpec::add_childgroup() {
  // @@protoc_insertion_point(field_add:tctrl.schema.ModuleSpec.childGroup)
  return childgroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::GroupInfo >*
ModuleSpec::mutable_childgroup() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.ModuleSpec.childGroup)
  return &childgroup_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::GroupInfo >&
ModuleSpec::childgroup() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.ModuleSpec.childGroup)
  return childgroup_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectionInfo::kKeyFieldNumber;
const int ConnectionInfo::kLabelFieldNumber;
const int ConnectionInfo::kTypeFieldNumber;
const int ConnectionInfo::kHostFieldNumber;
const int ConnectionInfo::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectionInfo::ConnectionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.ConnectionInfo)
}
ConnectionInfo::ConnectionInfo(const ConnectionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host().size() > 0) {
    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.ConnectionInfo)
}

void ConnectionInfo::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _cached_size_ = 0;
}

ConnectionInfo::~ConnectionInfo() {
  // @@protoc_insertion_point(destructor:tctrl.schema.ConnectionInfo)
  SharedDtor();
}

void ConnectionInfo::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectionInfo::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectionInfo& ConnectionInfo::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnectionInfo* ConnectionInfo::New(::google::protobuf::Arena* arena) const {
  ConnectionInfo* n = new ConnectionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.ConnectionInfo)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

bool ConnectionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.ConnectionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ConnectionInfo.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ConnectionInfo.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ConnectionInfo.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.ConnectionInfo.host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.ConnectionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.ConnectionInfo)
  return false;
#undef DO_
}

void ConnectionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.ConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ConnectionInfo.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ConnectionInfo.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ConnectionInfo.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // string host = 4;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ConnectionInfo.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->host(), output);
  }

  // int32 port = 5;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->port(), output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.ConnectionInfo)
}

::google::protobuf::uint8* ConnectionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.ConnectionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ConnectionInfo.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ConnectionInfo.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ConnectionInfo.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // string host = 4;
  if (this->host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.ConnectionInfo.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->host(), target);
  }

  // int32 port = 5;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->port(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.ConnectionInfo)
  return target;
}

size_t ConnectionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.ConnectionInfo)
  size_t total_size = 0;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string host = 4;
  if (this->host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host());
  }

  // int32 port = 5;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.ConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.ConnectionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.ConnectionInfo)
    MergeFrom(*source);
  }
}

void ConnectionInfo::MergeFrom(const ConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.ConnectionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.host().size() > 0) {

    host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void ConnectionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.ConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectionInfo::CopyFrom(const ConnectionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.ConnectionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectionInfo::IsInitialized() const {
  return true;
}

void ConnectionInfo::Swap(ConnectionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectionInfo::InternalSwap(ConnectionInfo* other) {
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  type_.Swap(&other->type_);
  host_.Swap(&other->host_);
  std::swap(port_, other->port_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectionInfo::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectionInfo

// string key = 1;
void ConnectionInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectionInfo::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ConnectionInfo.key)
  return key_.GetNoArena();
}
void ConnectionInfo::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ConnectionInfo.key)
}
#if LANG_CXX11
void ConnectionInfo::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ConnectionInfo.key)
}
#endif
void ConnectionInfo::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ConnectionInfo.key)
}
void ConnectionInfo::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ConnectionInfo.key)
}
::std::string* ConnectionInfo::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ConnectionInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectionInfo::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ConnectionInfo.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectionInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ConnectionInfo.key)
}

// string label = 2;
void ConnectionInfo::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectionInfo::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ConnectionInfo.label)
  return label_.GetNoArena();
}
void ConnectionInfo::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ConnectionInfo.label)
}
#if LANG_CXX11
void ConnectionInfo::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ConnectionInfo.label)
}
#endif
void ConnectionInfo::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ConnectionInfo.label)
}
void ConnectionInfo::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ConnectionInfo.label)
}
::std::string* ConnectionInfo::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ConnectionInfo.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectionInfo::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ConnectionInfo.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectionInfo::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ConnectionInfo.label)
}

// string type = 3;
void ConnectionInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectionInfo::type() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ConnectionInfo.type)
  return type_.GetNoArena();
}
void ConnectionInfo::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ConnectionInfo.type)
}
#if LANG_CXX11
void ConnectionInfo::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ConnectionInfo.type)
}
#endif
void ConnectionInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ConnectionInfo.type)
}
void ConnectionInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ConnectionInfo.type)
}
::std::string* ConnectionInfo::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ConnectionInfo.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectionInfo::release_type() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ConnectionInfo.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectionInfo::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ConnectionInfo.type)
}

// string host = 4;
void ConnectionInfo::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectionInfo::host() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ConnectionInfo.host)
  return host_.GetNoArena();
}
void ConnectionInfo::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.ConnectionInfo.host)
}
#if LANG_CXX11
void ConnectionInfo::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.ConnectionInfo.host)
}
#endif
void ConnectionInfo::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.ConnectionInfo.host)
}
void ConnectionInfo::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.ConnectionInfo.host)
}
::std::string* ConnectionInfo::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.ConnectionInfo.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectionInfo::release_host() {
  // @@protoc_insertion_point(field_release:tctrl.schema.ConnectionInfo.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectionInfo::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.ConnectionInfo.host)
}

// int32 port = 5;
void ConnectionInfo::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 ConnectionInfo::port() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.ConnectionInfo.port)
  return port_;
}
void ConnectionInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:tctrl.schema.ConnectionInfo.port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupInfo::kKeyFieldNumber;
const int GroupInfo::kLabelFieldNumber;
const int GroupInfo::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupInfo::GroupInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.GroupInfo)
}
GroupInfo::GroupInfo(const GroupInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tag_(from.tag_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.GroupInfo)
}

void GroupInfo::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GroupInfo::~GroupInfo() {
  // @@protoc_insertion_point(destructor:tctrl.schema.GroupInfo)
  SharedDtor();
}

void GroupInfo::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GroupInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupInfo::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupInfo& GroupInfo::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupInfo* GroupInfo::New(::google::protobuf::Arena* arena) const {
  GroupInfo* n = new GroupInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.GroupInfo)
  tag_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GroupInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.GroupInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.GroupInfo.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.GroupInfo.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag(this->tag_size() - 1).data(),
            this->tag(this->tag_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.GroupInfo.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.GroupInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.GroupInfo)
  return false;
#undef DO_
}

void GroupInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.GroupInfo.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.GroupInfo.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // repeated string tag = 3;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.GroupInfo.tag");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->tag(i), output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.GroupInfo)
}

::google::protobuf::uint8* GroupInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.GroupInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.GroupInfo.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.GroupInfo.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // repeated string tag = 3;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.GroupInfo.tag");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->tag(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.GroupInfo)
  return target;
}

size_t GroupInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.GroupInfo)
  size_t total_size = 0;

  // repeated string tag = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tag_size());
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tag(i));
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.GroupInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.GroupInfo)
    MergeFrom(*source);
  }
}

void GroupInfo::MergeFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.GroupInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_.MergeFrom(from.tag_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
}

void GroupInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupInfo::CopyFrom(const GroupInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.GroupInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupInfo::IsInitialized() const {
  return true;
}

void GroupInfo::Swap(GroupInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupInfo::InternalSwap(GroupInfo* other) {
  tag_.InternalSwap(&other->tag_);
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupInfo::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupInfo

// string key = 1;
void GroupInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupInfo::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.GroupInfo.key)
  return key_.GetNoArena();
}
void GroupInfo::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.GroupInfo.key)
}
#if LANG_CXX11
void GroupInfo::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.GroupInfo.key)
}
#endif
void GroupInfo::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.GroupInfo.key)
}
void GroupInfo::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.GroupInfo.key)
}
::std::string* GroupInfo::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.GroupInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupInfo::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.GroupInfo.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.GroupInfo.key)
}

// string label = 2;
void GroupInfo::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GroupInfo::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.GroupInfo.label)
  return label_.GetNoArena();
}
void GroupInfo::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.GroupInfo.label)
}
#if LANG_CXX11
void GroupInfo::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.GroupInfo.label)
}
#endif
void GroupInfo::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.GroupInfo.label)
}
void GroupInfo::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.GroupInfo.label)
}
::std::string* GroupInfo::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.GroupInfo.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GroupInfo::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.GroupInfo.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GroupInfo::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.GroupInfo.label)
}

// repeated string tag = 3;
int GroupInfo::tag_size() const {
  return tag_.size();
}
void GroupInfo::clear_tag() {
  tag_.Clear();
}
const ::std::string& GroupInfo::tag(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.GroupInfo.tag)
  return tag_.Get(index);
}
::std::string* GroupInfo::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.GroupInfo.tag)
  return tag_.Mutable(index);
}
void GroupInfo::set_tag(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tctrl.schema.GroupInfo.tag)
  tag_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GroupInfo::set_tag(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tctrl.schema.GroupInfo.tag)
  tag_.Mutable(index)->assign(std::move(value));
}
#endif
void GroupInfo::set_tag(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tctrl.schema.GroupInfo.tag)
}
void GroupInfo::set_tag(int index, const char* value, size_t size) {
  tag_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.GroupInfo.tag)
}
::std::string* GroupInfo::add_tag() {
  // @@protoc_insertion_point(field_add_mutable:tctrl.schema.GroupInfo.tag)
  return tag_.Add();
}
void GroupInfo::add_tag(const ::std::string& value) {
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tctrl.schema.GroupInfo.tag)
}
#if LANG_CXX11
void GroupInfo::add_tag(::std::string&& value) {
  tag_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tctrl.schema.GroupInfo.tag)
}
#endif
void GroupInfo::add_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tctrl.schema.GroupInfo.tag)
}
void GroupInfo::add_tag(const char* value, size_t size) {
  tag_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tctrl.schema.GroupInfo.tag)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GroupInfo::tag() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.GroupInfo.tag)
  return tag_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GroupInfo::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.GroupInfo.tag)
  return &tag_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppSpec::kKeyFieldNumber;
const int AppSpec::kLabelFieldNumber;
const int AppSpec::kTagFieldNumber;
const int AppSpec::kDescriptionFieldNumber;
const int AppSpec::kPathFieldNumber;
const int AppSpec::kChildModuleFieldNumber;
const int AppSpec::kChildGroupFieldNumber;
const int AppSpec::kOptionListFieldNumber;
const int AppSpec::kConnectionFieldNumber;
const int AppSpec::kModuleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppSpec::AppSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_tctrl_2dschema_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tctrl.schema.AppSpec)
}
AppSpec::AppSpec(const AppSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tag_(from.tag_),
      childmodule_(from.childmodule_),
      childgroup_(from.childgroup_),
      optionlist_(from.optionlist_),
      connection_(from.connection_),
      moduletype_(from.moduletype_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:tctrl.schema.AppSpec)
}

void AppSpec::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AppSpec::~AppSpec() {
  // @@protoc_insertion_point(destructor:tctrl.schema.AppSpec)
  SharedDtor();
}

void AppSpec::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppSpec::descriptor() {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppSpec& AppSpec::default_instance() {
  protobuf_tctrl_2dschema_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppSpec* AppSpec::New(::google::protobuf::Arena* arena) const {
  AppSpec* n = new AppSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tctrl.schema.AppSpec)
  tag_.Clear();
  childmodule_.Clear();
  childgroup_.Clear();
  optionlist_.Clear();
  connection_.Clear();
  moduletype_.Clear();
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AppSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tctrl.schema.AppSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.AppSpec.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.AppSpec.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag(this->tag_size() - 1).data(),
            this->tag(this->tag_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.AppSpec.tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.AppSpec.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ModuleSpec childModule = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_childmodule()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.GroupInfo childGroup = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_childgroup()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.OptionList optionList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_optionlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ConnectionInfo connection = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_connection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tctrl.schema.ModuleTypeSpec moduleType = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_moduletype()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tctrl.schema.AppSpec.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tctrl.schema.AppSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tctrl.schema.AppSpec)
  return false;
#undef DO_
}

void AppSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tctrl.schema.AppSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // repeated string tag = 3;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.tag");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->tag(i), output);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // repeated .tctrl.schema.ModuleSpec childModule = 5;
  for (unsigned int i = 0, n = this->childmodule_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->childmodule(i), output);
  }

  // repeated .tctrl.schema.GroupInfo childGroup = 6;
  for (unsigned int i = 0, n = this->childgroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->childgroup(i), output);
  }

  // repeated .tctrl.schema.OptionList optionList = 7;
  for (unsigned int i = 0, n = this->optionlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->optionlist(i), output);
  }

  // repeated .tctrl.schema.ConnectionInfo connection = 8;
  for (unsigned int i = 0, n = this->connection_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->connection(i), output);
  }

  // repeated .tctrl.schema.ModuleTypeSpec moduleType = 9;
  for (unsigned int i = 0, n = this->moduletype_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->moduletype(i), output);
  }

  // string path = 10;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->path(), output);
  }

  // @@protoc_insertion_point(serialize_end:tctrl.schema.AppSpec)
}

::google::protobuf::uint8* AppSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tctrl.schema.AppSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // repeated string tag = 3;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.tag");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->tag(i), target);
  }

  // string description = 4;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // repeated .tctrl.schema.ModuleSpec childModule = 5;
  for (unsigned int i = 0, n = this->childmodule_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->childmodule(i), deterministic, target);
  }

  // repeated .tctrl.schema.GroupInfo childGroup = 6;
  for (unsigned int i = 0, n = this->childgroup_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->childgroup(i), deterministic, target);
  }

  // repeated .tctrl.schema.OptionList optionList = 7;
  for (unsigned int i = 0, n = this->optionlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->optionlist(i), deterministic, target);
  }

  // repeated .tctrl.schema.ConnectionInfo connection = 8;
  for (unsigned int i = 0, n = this->connection_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->connection(i), deterministic, target);
  }

  // repeated .tctrl.schema.ModuleTypeSpec moduleType = 9;
  for (unsigned int i = 0, n = this->moduletype_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->moduletype(i), deterministic, target);
  }

  // string path = 10;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tctrl.schema.AppSpec.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->path(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tctrl.schema.AppSpec)
  return target;
}

size_t AppSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tctrl.schema.AppSpec)
  size_t total_size = 0;

  // repeated string tag = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tag_size());
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tag(i));
  }

  // repeated .tctrl.schema.ModuleSpec childModule = 5;
  {
    unsigned int count = this->childmodule_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->childmodule(i));
    }
  }

  // repeated .tctrl.schema.GroupInfo childGroup = 6;
  {
    unsigned int count = this->childgroup_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->childgroup(i));
    }
  }

  // repeated .tctrl.schema.OptionList optionList = 7;
  {
    unsigned int count = this->optionlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->optionlist(i));
    }
  }

  // repeated .tctrl.schema.ConnectionInfo connection = 8;
  {
    unsigned int count = this->connection_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->connection(i));
    }
  }

  // repeated .tctrl.schema.ModuleTypeSpec moduleType = 9;
  {
    unsigned int count = this->moduletype_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->moduletype(i));
    }
  }

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string description = 4;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string path = 10;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tctrl.schema.AppSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const AppSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tctrl.schema.AppSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tctrl.schema.AppSpec)
    MergeFrom(*source);
  }
}

void AppSpec::MergeFrom(const AppSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tctrl.schema.AppSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_.MergeFrom(from.tag_);
  childmodule_.MergeFrom(from.childmodule_);
  childgroup_.MergeFrom(from.childgroup_);
  optionlist_.MergeFrom(from.optionlist_);
  connection_.MergeFrom(from.connection_);
  moduletype_.MergeFrom(from.moduletype_);
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void AppSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tctrl.schema.AppSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppSpec::CopyFrom(const AppSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tctrl.schema.AppSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppSpec::IsInitialized() const {
  return true;
}

void AppSpec::Swap(AppSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppSpec::InternalSwap(AppSpec* other) {
  tag_.InternalSwap(&other->tag_);
  childmodule_.InternalSwap(&other->childmodule_);
  childgroup_.InternalSwap(&other->childgroup_);
  optionlist_.InternalSwap(&other->optionlist_);
  connection_.InternalSwap(&other->connection_);
  moduletype_.InternalSwap(&other->moduletype_);
  key_.Swap(&other->key_);
  label_.Swap(&other->label_);
  description_.Swap(&other->description_);
  path_.Swap(&other->path_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppSpec::GetMetadata() const {
  protobuf_tctrl_2dschema_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tctrl_2dschema_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppSpec

// string key = 1;
void AppSpec::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppSpec::key() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.key)
  return key_.GetNoArena();
}
void AppSpec::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.AppSpec.key)
}
#if LANG_CXX11
void AppSpec::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.AppSpec.key)
}
#endif
void AppSpec::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.AppSpec.key)
}
void AppSpec::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.AppSpec.key)
}
::std::string* AppSpec::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpec::release_key() {
  // @@protoc_insertion_point(field_release:tctrl.schema.AppSpec.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpec::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.AppSpec.key)
}

// string label = 2;
void AppSpec::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppSpec::label() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.label)
  return label_.GetNoArena();
}
void AppSpec::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.AppSpec.label)
}
#if LANG_CXX11
void AppSpec::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.AppSpec.label)
}
#endif
void AppSpec::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.AppSpec.label)
}
void AppSpec::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.AppSpec.label)
}
::std::string* AppSpec::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpec::release_label() {
  // @@protoc_insertion_point(field_release:tctrl.schema.AppSpec.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpec::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.AppSpec.label)
}

// repeated string tag = 3;
int AppSpec::tag_size() const {
  return tag_.size();
}
void AppSpec::clear_tag() {
  tag_.Clear();
}
const ::std::string& AppSpec::tag(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.tag)
  return tag_.Get(index);
}
::std::string* AppSpec::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.tag)
  return tag_.Mutable(index);
}
void AppSpec::set_tag(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tctrl.schema.AppSpec.tag)
  tag_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AppSpec::set_tag(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tctrl.schema.AppSpec.tag)
  tag_.Mutable(index)->assign(std::move(value));
}
#endif
void AppSpec::set_tag(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tctrl.schema.AppSpec.tag)
}
void AppSpec::set_tag(int index, const char* value, size_t size) {
  tag_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.AppSpec.tag)
}
::std::string* AppSpec::add_tag() {
  // @@protoc_insertion_point(field_add_mutable:tctrl.schema.AppSpec.tag)
  return tag_.Add();
}
void AppSpec::add_tag(const ::std::string& value) {
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tctrl.schema.AppSpec.tag)
}
#if LANG_CXX11
void AppSpec::add_tag(::std::string&& value) {
  tag_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tctrl.schema.AppSpec.tag)
}
#endif
void AppSpec::add_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tctrl.schema.AppSpec.tag)
}
void AppSpec::add_tag(const char* value, size_t size) {
  tag_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tctrl.schema.AppSpec.tag)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AppSpec::tag() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.AppSpec.tag)
  return tag_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AppSpec::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.AppSpec.tag)
  return &tag_;
}

// string description = 4;
void AppSpec::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppSpec::description() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.description)
  return description_.GetNoArena();
}
void AppSpec::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.AppSpec.description)
}
#if LANG_CXX11
void AppSpec::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.AppSpec.description)
}
#endif
void AppSpec::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.AppSpec.description)
}
void AppSpec::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.AppSpec.description)
}
::std::string* AppSpec::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpec::release_description() {
  // @@protoc_insertion_point(field_release:tctrl.schema.AppSpec.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpec::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.AppSpec.description)
}

// string path = 10;
void AppSpec::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppSpec::path() const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.path)
  return path_.GetNoArena();
}
void AppSpec::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tctrl.schema.AppSpec.path)
}
#if LANG_CXX11
void AppSpec::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tctrl.schema.AppSpec.path)
}
#endif
void AppSpec::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tctrl.schema.AppSpec.path)
}
void AppSpec::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tctrl.schema.AppSpec.path)
}
::std::string* AppSpec::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSpec::release_path() {
  // @@protoc_insertion_point(field_release:tctrl.schema.AppSpec.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSpec::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:tctrl.schema.AppSpec.path)
}

// repeated .tctrl.schema.ModuleSpec childModule = 5;
int AppSpec::childmodule_size() const {
  return childmodule_.size();
}
void AppSpec::clear_childmodule() {
  childmodule_.Clear();
}
const ::tctrl::schema::ModuleSpec& AppSpec::childmodule(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.childModule)
  return childmodule_.Get(index);
}
::tctrl::schema::ModuleSpec* AppSpec::mutable_childmodule(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.childModule)
  return childmodule_.Mutable(index);
}
::tctrl::schema::ModuleSpec* AppSpec::add_childmodule() {
  // @@protoc_insertion_point(field_add:tctrl.schema.AppSpec.childModule)
  return childmodule_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ModuleSpec >*
AppSpec::mutable_childmodule() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.AppSpec.childModule)
  return &childmodule_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ModuleSpec >&
AppSpec::childmodule() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.AppSpec.childModule)
  return childmodule_;
}

// repeated .tctrl.schema.GroupInfo childGroup = 6;
int AppSpec::childgroup_size() const {
  return childgroup_.size();
}
void AppSpec::clear_childgroup() {
  childgroup_.Clear();
}
const ::tctrl::schema::GroupInfo& AppSpec::childgroup(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.childGroup)
  return childgroup_.Get(index);
}
::tctrl::schema::GroupInfo* AppSpec::mutable_childgroup(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.childGroup)
  return childgroup_.Mutable(index);
}
::tctrl::schema::GroupInfo* AppSpec::add_childgroup() {
  // @@protoc_insertion_point(field_add:tctrl.schema.AppSpec.childGroup)
  return childgroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::GroupInfo >*
AppSpec::mutable_childgroup() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.AppSpec.childGroup)
  return &childgroup_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::GroupInfo >&
AppSpec::childgroup() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.AppSpec.childGroup)
  return childgroup_;
}

// repeated .tctrl.schema.OptionList optionList = 7;
int AppSpec::optionlist_size() const {
  return optionlist_.size();
}
void AppSpec::clear_optionlist() {
  optionlist_.Clear();
}
const ::tctrl::schema::OptionList& AppSpec::optionlist(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.optionList)
  return optionlist_.Get(index);
}
::tctrl::schema::OptionList* AppSpec::mutable_optionlist(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.optionList)
  return optionlist_.Mutable(index);
}
::tctrl::schema::OptionList* AppSpec::add_optionlist() {
  // @@protoc_insertion_point(field_add:tctrl.schema.AppSpec.optionList)
  return optionlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::OptionList >*
AppSpec::mutable_optionlist() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.AppSpec.optionList)
  return &optionlist_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::OptionList >&
AppSpec::optionlist() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.AppSpec.optionList)
  return optionlist_;
}

// repeated .tctrl.schema.ConnectionInfo connection = 8;
int AppSpec::connection_size() const {
  return connection_.size();
}
void AppSpec::clear_connection() {
  connection_.Clear();
}
const ::tctrl::schema::ConnectionInfo& AppSpec::connection(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.connection)
  return connection_.Get(index);
}
::tctrl::schema::ConnectionInfo* AppSpec::mutable_connection(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.connection)
  return connection_.Mutable(index);
}
::tctrl::schema::ConnectionInfo* AppSpec::add_connection() {
  // @@protoc_insertion_point(field_add:tctrl.schema.AppSpec.connection)
  return connection_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ConnectionInfo >*
AppSpec::mutable_connection() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.AppSpec.connection)
  return &connection_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ConnectionInfo >&
AppSpec::connection() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.AppSpec.connection)
  return connection_;
}

// repeated .tctrl.schema.ModuleTypeSpec moduleType = 9;
int AppSpec::moduletype_size() const {
  return moduletype_.size();
}
void AppSpec::clear_moduletype() {
  moduletype_.Clear();
}
const ::tctrl::schema::ModuleTypeSpec& AppSpec::moduletype(int index) const {
  // @@protoc_insertion_point(field_get:tctrl.schema.AppSpec.moduleType)
  return moduletype_.Get(index);
}
::tctrl::schema::ModuleTypeSpec* AppSpec::mutable_moduletype(int index) {
  // @@protoc_insertion_point(field_mutable:tctrl.schema.AppSpec.moduleType)
  return moduletype_.Mutable(index);
}
::tctrl::schema::ModuleTypeSpec* AppSpec::add_moduletype() {
  // @@protoc_insertion_point(field_add:tctrl.schema.AppSpec.moduleType)
  return moduletype_.Add();
}
::google::protobuf::RepeatedPtrField< ::tctrl::schema::ModuleTypeSpec >*
AppSpec::mutable_moduletype() {
  // @@protoc_insertion_point(field_mutable_list:tctrl.schema.AppSpec.moduleType)
  return &moduletype_;
}
const ::google::protobuf::RepeatedPtrField< ::tctrl::schema::ModuleTypeSpec >&
AppSpec::moduletype() const {
  // @@protoc_insertion_point(field_list:tctrl.schema.AppSpec.moduleType)
  return moduletype_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace schema
}  // namespace tctrl

// @@protoc_insertion_point(global_scope)
